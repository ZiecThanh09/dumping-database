 in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_video_plays_ru](id:124)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary 'Xj1\0\ﬂ_™†V\0ZzT~s',0,NULL,1,0),('2025-01-10 06:44:57','2025-01-14 07:52:36',125,'course_information_ar','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org as org,\n    cn.course_name as course_name,\n    course_run,\n    fes.actor_id as actor_id,\n    fes.enrollment_mode as enrollment_mode,\n    case\n        when flfc.emission_time >= subtractDays(now(), 7) then actor_id else null\n    end as active_learner,\n    tag as course_tag,\n    fes.course_key as course_key\nfrom reporting.fact_enrollment_status fes\nleft join\n    xapi.fact_learner_last_course_visit flfc\n    on fes.org = flfc.org\n    and fes.course_key = flfc.course_key\n    and fes.actor_id = flfc.actor_id\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nleft join reporting.most_recent_course_tags mrct on mrct.course_key = fes.course_key\nwhere\n    enrollment_status = \'registered\'\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[course_information_ar](id:125)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '¥\r\œ\÷˛˚_ égª\≈\Ô\ƒ˘î',0,NULL,0,0),('2025-01-10 06:44:57','2025-01-14 07:52:36',126,'tag_filter',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select id, rownum, tag, course_key\nfrom\n    (\n        select\n            id,\n            multiIf(parent = 0, id, CAST(parent, \'int\')) as sort_order_1,\n            multiIf(parent = 0, 0, 1) as sort_order_2,\n            concat(repeat(\'- \', countMatches(lineage, \',\')), value) as tag,\n            row_number() over (\n                order by sort_order_1 ASC, sort_order_2 ASC, value ASC\n            ) as rownum\n        from event_sink.most_recent_tags\n    ) as t\nleft join reporting.most_recent_course_tags ct on ct.tag_id = t.id\n',NULL,'[OpenedX Clickhouse].[tag_filter](id:126)',1,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]',NULL,_binary 'ÅExt˝ÜEhß0ëy´z\’',0,NULL,0,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',127,'enrollment_status_pt_PT','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org,\n    fes.course_key,\n    fes.actor_id,\n    fes.enrollment_status,\n    fes.enrollment_mode,\n    fes.emission_time,\n    cn.course_name,\n    cn.course_run\nfrom reporting.fact_enrollment_status fes\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[enrollment_status_pt_PT](id:127)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'V5»æß[WTÖª@	\–\Ès',0,NULL,0,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',128,'at_risk_coursewide_avg_he','emission_time',NULL,1,1,1,0,NULL,0,NULL,NULL,'with\n    problem_coursewide_avg as (\n        -- See int_problem_results.sql for more context\n        with\n            successful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    first_success_at\n                from xapi.responses\n                where\n                    isNotNull(first_success_at)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            unsuccessful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    max(last_attempt_at) as last_attempt_at\n                from xapi.responses\n                where\n                    actor_id not in (select distinct actor_id from successful_responses)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                group by org, course_key, problem_id, actor_id\n            ),\n            responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    first_success_at as emission_time\n                from successful_responses\n                union all\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    last_attempt_at as emission_time\n                from unsuccessful_responses\n            ),\n            full_responses as (\n                select\n                    events.emission_time as emission_time,\n                    events.org as org,\n                    events.course_key as course_key,\n                    events.problem_id as problem_id,\n                    events.object_id as object_id,\n                    events.actor_id as actor_id,\n                    events.responses as responses,\n                    events.success as success,\n                    events.attempts as attempts,\n                    events.interaction_type as interaction_type\n                from xapi.problem_events events\n                join\n                    responses using (\n                        org, course_key, problem_id, actor_id, emission_time\n                    )\n            ),\n            -- Aggregating course-wide averages and percentages\n            coursewide_attempts as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    avg(\n                        case when success then attempts else 0 end\n                    ) as avg_correct_attempts,\n                    avg(\n                        case when not success then attempts else 0 end\n                    ) as avg_incorrect_attempts,\n                    sum(case when success then 1 else 0 end)::float\n                    / count(*) as coursewide_percent_correct\n                from full_responses\n                group by org, course_key, problem_id\n            )\n\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                problem_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded as graded,\n            users.username as username,\n            users.email as email,\n            users.name as name,\n            -- Aggregated values from the coursewide_attempts CTE\n            coursewide_attempts.avg_correct_attempts as avg_correct_attempts_coursewide,\n            coursewide_attempts.avg_incorrect_attempts\n            as avg_incorrect_attempts_coursewide,\n            coursewide_attempts.coursewide_percent_correct\n            as coursewide_percent_correct,\n            -- Learner-specific calculations (correcting the percentage calculations)\n            (\n                case when full_responses.success then full_responses.attempts else 0 end\n            ) as correct_attempts_by_learner,\n            (\n                case\n                    when not full_responses.success then full_responses.attempts else 0\n                end\n            ) as incorrect_attempts_by_learner,\n            -- Ensure we calculate percentage based on total attempts per problem\n            -- (multiplied\n            -- by 100 only once)\n            (\n                sum(case when full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_correct,\n            (\n                sum(case when not full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_incorrect\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        left outer join\n            event_sink.user_pii users\n            on (\n                full_responses.actor_id like \'mailto:%\'\n                and SUBSTRING(full_responses.actor_id, 8) = users.email\n            )\n            or full_responses.actor_id = toString(users.external_user_id)\n        join\n            coursewide_attempts\n            on full_responses.org = coursewide_attempts.org\n            and full_responses.course_key = coursewide_attempts.course_key\n            and full_responses.problem_id = coursewide_attempts.problem_id\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect problem_coursewide_avg.*\nfrom problem_coursewide_avg\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\n',NULL,'[OpenedX Clickhouse].[at_risk_coursewide_avg_he](id:128)',1,NULL,0,NULL,NULL,NULL,_binary '7B\Ô±\À[o∏\Ÿ\‘¨˛p\Ó',0,NULL,0,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',129,'fact_enrollments_el','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    enrollments_base as (\n        select *\n        from reporting.fact_enrollments\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    enrollment_mode,\n    enrollment_status\nfrom enrollments_base\n',NULL,'[OpenedX Clickhouse].[fact_enrollments_el](id:129)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary ']˙R\Ó˛WAû\Œˇ.ãi\”n',0,NULL,1,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',130,'fact_at_risk_watched_video_segments_tr_TR','started_at',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watches as (\n        with\n            video_events as (\n                select\n                    emission_time,\n                    org,\n                    course_key,\n                    splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                    object_id,\n                    actor_id,\n                    verb_id,\n                    video_position,\n                    video_duration\n                from xapi.video_playback_events\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            starts as (\n                select *\n                from video_events\n                where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n            ),\n            ends as (\n                select *\n                from video_events\n                where\n                    verb_id in (\n                        \'http://adlnet.gov/expapi/verbs/completed\',\n                        \'https://w3id.org/xapi/video/verbs/seeked\',\n                        \'https://w3id.org/xapi/video/verbs/paused\',\n                        \'http://adlnet.gov/expapi/verbs/terminated\'\n                    )\n            ),\n            segments as (\n                select\n                    starts.org as org,\n                    starts.course_key as course_key,\n                    starts.video_id as video_id,\n                    starts.actor_id,\n                    starts.object_id as object_id,\n                    cast(starts.video_position as Int32) as start_position,\n                    cast(ends.video_position as Int32) as end_position,\n                    starts.emission_time as started_at,\n                    ends.emission_time as ended_at,\n                    ends.verb_id as end_type,\n                    starts.video_duration as video_duration\n                from starts left\n                asof join\n                    ends\n                    on (\n                        starts.org = ends.org\n                        and starts.course_key = ends.course_key\n                        and starts.video_id = ends.video_id\n                        and starts.actor_id = ends.actor_id\n                        and starts.emission_time < ends.emission_time\n                    )\n            ),\n            enriched_segments as (\n                select\n                    segments.org as org,\n                    segments.course_key as course_key,\n                    blocks.course_name as course_name,\n                    blocks.course_run as course_run,\n                    blocks.section_with_name as section_with_name,\n                    blocks.subsection_with_name as subsection_with_name,\n                    blocks.block_name as video_name,\n                    blocks.display_name_with_location as video_name_with_location,\n                    segments.actor_id as actor_id,\n                    segments.object_id as object_id,\n                    segments.started_at as started_at,\n                    segments.start_position\n                    - (segments.start_position % 5) as start_position,\n                    segments.end_position - (segments.end_position % 5) as end_position,\n                    segments.video_duration as video_duration,\n                    segments.video_id as video_id\n                from segments\n                join\n                    reporting.dim_course_blocks_extended blocks\n                    on (\n                        segments.course_key = blocks.course_key\n                        and segments.video_id = blocks.block_id\n                    )\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_id,\n            concat(\n                \'<a href=\"\',\n                object_id,\n                \'\" target=\"_blank\">\',\n                video_name_with_location,\n                \'</a>\'\n            ) as video_link,\n            actor_id,\n            started_at,\n            arrayJoin(range(start_position, end_position, 5)) as segment_start,\n            video_duration,\n            CONCAT(\n                toString(segment_start), \'-\', toString(segment_start + 4)\n            ) as segment_range,\n            start_position,\n            username,\n            name,\n            email\n        from enriched_segments\n        left outer join\n            reporting.dim_user_pii users\n            on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n            or actor_id = toString(users.external_user_id)\n        order by segment_start\n    )\n\nselect watches.*\nfrom watches\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_watched_video_segments_tr_TR](id:130)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '\ı4\”\ﬂVŸΩ}56Z',0,NULL,1,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',131,'watched_video_duration_de_DE',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    course_keys as (\n        select [] as course_key\n        {% if filter_values(\"course_name\") != [] %}\n            union all\n            select array(course_key) as course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        {% endif %}\n        {% if filter_values(\"tag\") != [] %}\n            union distinct\n            select array(course_key) as course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        {% endif %}\n    )\nselect\n    names.org as org,\n    names.course_key as course_key,\n    names.course_name as course_name,\n    names.course_run as course_run,\n    actor_id,\n    video_count,\n    video_duration,\n    watched_time,\n    rewatched_time,\n    object_id\nfrom\n    reporting.watched_video_duration(\n        org_filter = coalesce({{ filter_values(\"org\") }}, []),\n        course_key_filter\n        = coalesce((select array_concat_agg(course_key) from course_keys), [])\n    ) as a\nleft join\n    event_sink.course_names as names\n    on a.org = names.org\n    and a.course_key = names.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[watched_video_duration_de_DE](id:131)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'Hh|{^®\€ˇjd®)Ø',0,NULL,1,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',132,'fact_at_risk_video_watches_ar',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watches as (\n        with\n            watched_segments as (\n                with\n                    video_events as (\n                        select\n                            emission_time,\n                            org,\n                            course_key,\n                            splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                            object_id,\n                            actor_id,\n                            verb_id,\n                            video_position,\n                            video_duration\n                        from xapi.video_playback_events\n                        where\n                            1 = 1\n                            {% if filter_values(\"org\") != [] %}\n                                and org in {{ filter_values(\"org\") | where_in }}\n                            {% endif %}\n\n                            {% if filter_values(\"course_name\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from event_sink.course_names\n                                    where\n                                        course_name\n                                        in {{ filter_values(\"course_name\") | where_in }}\n                                )\n                            {% endif %}\n\n                            {% if filter_values(\"tag\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from reporting.most_recent_course_tags\n                                    where\n                                        tag in (\n                                            select\n                                                replaceAll(\n                                                    arrayJoin(\n                                                        {{ filter_values(\"tag\") }}\n                                                    ),\n                                                    \'- \',\n                                                    \'\'\n                                                )\n                                        )\n                                )\n                            {% endif %}\n                    ),\n                    starts as (\n                        select *\n                        from video_events\n                        where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n                    ),\n                    ends as (\n                        select *\n                        from video_events\n                        where\n                            verb_id in (\n                                \'http://adlnet.gov/expapi/verbs/completed\',\n                                \'https://w3id.org/xapi/video/verbs/seeked\',\n                                \'https://w3id.org/xapi/video/verbs/paused\',\n                                \'http://adlnet.gov/expapi/verbs/terminated\'\n                            )\n                    ),\n                    segments as (\n                        select\n                            starts.org as org,\n                            starts.course_key as course_key,\n                            starts.video_id as video_id,\n                            starts.actor_id,\n                            starts.object_id as object_id,\n                            cast(starts.video_position as Int32) as start_position,\n                            cast(ends.video_position as Int32) as end_position,\n                            starts.emission_time as started_at,\n                            ends.emission_time as ended_at,\n                            ends.verb_id as end_type,\n                            starts.video_duration as video_duration\n                        from starts left\n                        asof join\n                            ends\n                            on (\n                                starts.org = ends.org\n                                and starts.course_key = ends.course_key\n                                and starts.video_id = ends.video_id\n                                and starts.actor_id = ends.actor_id\n                                and starts.emission_time < ends.emission_time\n                            )\n                    ),\n                    enriched_segments as (\n                        select\n                            segments.org as org,\n                            segments.course_key as course_key,\n                            blocks.course_name as course_name,\n                            blocks.course_run as course_run,\n                            blocks.section_with_name as section_with_name,\n                            blocks.subsection_with_name as subsection_with_name,\n                            blocks.block_name as video_name,\n                            blocks.display_name_with_location\n                            as video_name_with_location,\n                            segments.actor_id as actor_id,\n                            segments.object_id as object_id,\n                            segments.started_at as started_at,\n                            segments.start_position\n                            - (segments.start_position % 5) as start_position,\n                            segments.end_position\n                            - (segments.end_position % 5) as end_position,\n                            segments.video_duration as video_duration,\n                            segments.video_id as video_id\n                        from segments\n                        join\n                            reporting.dim_course_blocks_extended blocks\n                            on (\n                                segments.course_key = blocks.course_key\n                                and segments.video_id = blocks.block_id\n                            )\n                        where\n                            1 = 1\n                            {% if filter_values(\"org\") != [] %}\n                                and org in {{ filter_values(\"org\") | where_in }}\n                            {% endif %}\n\n                            {% if filter_values(\"course_name\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from event_sink.course_names\n                                    where\n                                        course_name\n                                        in {{ filter_values(\"course_name\") | where_in }}\n                                )\n                            {% endif %}\n\n                            {% if filter_values(\"tag\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from reporting.most_recent_course_tags\n                                    where\n                                        tag in (\n                                            select\n                                                replaceAll(\n                                                    arrayJoin(\n                                                        {{ filter_values(\"tag\") }}\n                                                    ),\n                                                    \'- \',\n                                                    \'\'\n                                                )\n                                        )\n                                )\n                            {% endif %}\n                    )\n\n                select\n                    org,\n                    course_key,\n                    course_name,\n                    course_run,\n                    section_with_name,\n                    subsection_with_name,\n                    video_name,\n                    video_name_with_location,\n                    video_id,\n                    concat(\n                        \'<a href=\"\',\n                        object_id,\n                        \'\" target=\"_blank\">\',\n                        video_name_with_location,\n                        \'</a>\'\n                    ) as video_link,\n                    actor_id,\n                    started_at,\n                    arrayJoin(range(start_position, end_position, 5)) as segment_start,\n                    video_duration,\n                    CONCAT(\n                        toString(segment_start), \'-\', toString(segment_start + 4)\n                    ) as segment_range,\n                    start_position,\n                    username,\n                    name,\n                    email\n                from enriched_segments\n                left outer join\n                    reporting.dim_user_pii users\n                    on (\n                        actor_id like \'mailto:%\'\n                        and SUBSTRING(actor_id, 8) = users.email\n                    )\n                    or actor_id = toString(users.external_user_id)\n                order by segment_start\n            )\n\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_link,\n            actor_id,\n            username,\n            email,\n            name,\n            count(distinct segment_start) as watched_segment_count,\n            (video_duration - 10) / 5 as video_segment_count,\n            video_segment_count <= watched_segment_count as watched_entire_video\n        from watched_segments\n        where\n            1 = 1\n\n            {% if filter_values(\"Section Name\") != [] %}\n                and section_with_name in {{ filter_values(\"Section Name\") | where_in }}\n            {% endif %}\n            {% if filter_values(\"Subsection Name\") != [] %}\n                and subsection_with_name\n                in {{ filter_values(\"Subsection Name\") | where_in }}\n            {% endif %}\n            {% if from_dttm %} and started_at > \'{{ from_dttm }}\' {% endif %}\n            {% if to_dttm %} and started_at < \'{{ to_dttm }}\' {% endif %}\n\n        group by\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_link,\n            actor_id,\n            video_id,\n            video_segment_count,\n            username,\n            email,\n            name\n    )\n\nselect watches.*\nfrom watches\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_video_watches_ar](id:132)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '()ñ®q[\rÇB\‡\Ó”ó\'',0,NULL,1,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',133,'course_names_en',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select * from event_sink.course_names\n',NULL,'[OpenedX Clickhouse].[course_names_en](id:133)',0,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]','{}',_binary '\ﬁ:9öPÅìCø\Ôwzeì',0,NULL,1,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',134,'fact_enrollment_status','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select * from reporting.fact_enrollment_status\n',NULL,'[OpenedX Clickhouse].[fact_enrollment_status](id:134)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '=\ﬁB¿\–C´Äá\ G	Ö\Ëé',0,NULL,0,0),('2025-01-10 06:44:58','2025-01-14 07:52:36',135,'fact_at_risk_video_engagement_en',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','select fact_video_engagement.*\nfrom reporting.fact_video_engagement\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if