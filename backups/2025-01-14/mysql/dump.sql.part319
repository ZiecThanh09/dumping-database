    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n\n            ),\n            section_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'section\' as content_level,\n                    actor_id,\n                    section_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.section_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            problem_engagement as (\n                select *\n                from subsection_engagement\n                union all\n                select *\n                from section_engagement\n            )\n        select\n            pe.org as org,\n            pe.course_key as course_key,\n            course_blocks.course_run as course_run,\n            course_blocks.display_name_with_location as section_subsection_name,\n            pe.content_level as content_level,\n            pe.actor_id as actor_id,\n            pe.section_subsection_problem_engagement\n            as section_subsection_problem_engagement,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from problem_engagement pe\n        join\n            reporting.dim_course_blocks course_blocks\n            on (\n                pe.org = course_blocks.org\n                and pe.course_key = course_blocks.course_key\n                and pe.block_id = course_blocks.block_id\n            )\n        left outer join\n            reporting.dim_user_pii users\n            on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n            or pe.actor_id = toString(users.external_user_id)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\nselect fact_problem_engagement.*\nfrom fact_problem_engagement pe\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners\n    on (\n        pe.org = at_risk_learners.org\n        and pe.course_key = at_risk_learners.course_key\n        and pe.actor_id = at_risk_learners.actor_id\n    )\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_problem_engagement_en](id:741)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'a \î\nn\ãSÞ¥+\Í°\çM\È',0,NULL,1,0),('2025-01-10 06:45:56','2025-01-14 07:53:21',742,'fact_video_watches_he',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watched_segments as (\n        with\n            video_events as (\n                select\n                    emission_time,\n                    org,\n                    course_key,\n                    splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                    object_id,\n                    actor_id,\n                    verb_id,\n                    video_position,\n                    video_duration\n                from xapi.video_playback_events\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            starts as (\n                select *\n                from video_events\n                where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n            ),\n            ends as (\n                select *\n                from video_events\n                where\n                    verb_id in (\n                        \'http://adlnet.gov/expapi/verbs/completed\',\n                        \'https://w3id.org/xapi/video/verbs/seeked\',\n                        \'https://w3id.org/xapi/video/verbs/paused\',\n                        \'http://adlnet.gov/expapi/verbs/terminated\'\n                    )\n            ),\n            segments as (\n                select\n                    starts.org as org,\n                    starts.course_key as course_key,\n                    starts.video_id as video_id,\n                    starts.actor_id,\n                    starts.object_id as object_id,\n                    cast(starts.video_position as Int32) as start_position,\n                    cast(ends.video_position as Int32) as end_position,\n                    starts.emission_time as started_at,\n                    ends.emission_time as ended_at,\n                    ends.verb_id as end_type,\n                    starts.video_duration as video_duration\n                from starts left\n                asof join\n                    ends\n                    on (\n                        starts.org = ends.org\n                        and starts.course_key = ends.course_key\n                        and starts.video_id = ends.video_id\n                        and starts.actor_id = ends.actor_id\n                        and starts.emission_time < ends.emission_time\n                    )\n            ),\n            enriched_segments as (\n                select\n                    segments.org as org,\n                    segments.course_key as course_key,\n                    blocks.course_name as course_name,\n                    blocks.course_run as course_run,\n                    blocks.section_with_name as section_with_name,\n                    blocks.subsection_with_name as subsection_with_name,\n                    blocks.block_name as video_name,\n                    blocks.display_name_with_location as video_name_with_location,\n                    segments.actor_id as actor_id,\n                    segments.object_id as object_id,\n                    segments.started_at as started_at,\n                    segments.start_position\n                    - (segments.start_position % 5) as start_position,\n                    segments.end_position - (segments.end_position % 5) as end_position,\n                    segments.video_duration as video_duration,\n                    segments.video_id as video_id\n                from segments\n                join\n                    reporting.dim_course_blocks_extended blocks\n                    on (\n                        segments.course_key = blocks.course_key\n                        and segments.video_id = blocks.block_id\n                    )\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_id,\n            concat(\n                \'<a href=\"\',\n                object_id,\n                \'\" target=\"_blank\">\',\n                video_name_with_location,\n                \'</a>\'\n            ) as video_link,\n            actor_id,\n            started_at,\n            arrayJoin(range(start_position, end_position, 5)) as segment_start,\n            video_duration,\n            CONCAT(\n                toString(segment_start), \'-\', toString(segment_start + 4)\n            ) as segment_range,\n            start_position,\n            username,\n            name,\n            email\n        from enriched_segments\n        left outer join\n            reporting.dim_user_pii users\n            on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n            or actor_id = toString(users.external_user_id)\n        order by segment_start\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_link,\n    actor_id,\n    username,\n    email,\n    name,\n    count(distinct segment_start) as watched_segment_count,\n    (video_duration - 10) / 5 as video_segment_count,\n    video_segment_count <= watched_segment_count as watched_entire_video\nfrom watched_segments\nwhere\n    1 = 1\n\n    {% if filter_values(\"Section Name\") != [] %}\n        and section_with_name in {{ filter_values(\"Section Name\") | where_in }}\n    {% endif %}\n    {% if filter_values(\"Subsection Name\") != [] %}\n        and subsection_with_name in {{ filter_values(\"Subsection Name\") | where_in }}\n    {% endif %}\n    {% if from_dttm %} and started_at > \'{{ from_dttm }}\' {% endif %}\n    {% if to_dttm %} and started_at < \'{{ to_dttm }}\' {% endif %}\n\ngroup by\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_link,\n    actor_id,\n    video_id,\n    video_segment_count,\n    username,\n    email,\n    name\n',NULL,'[OpenedX Clickhouse].[fact_video_watches_he](id:742)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '\ò&\å(¥Z¤wg\Ä×·',0,NULL,1,0),('2025-01-10 06:45:56','2025-01-14 07:53:21',743,'course_information_de_DE','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org as org,\n    cn.course_name as course_name,\n    course_run,\n    fes.actor_id as actor_id,\n    fes.enrollment_mode as enrollment_mode,\n    case\n        when flfc.emission_time >= subtractDays(now(), 7) then actor_id else null\n    end as active_learner,\n    tag as course_tag,\n    fes.course_key as course_key\nfrom reporting.fact_enrollment_status fes\nleft join\n    xapi.fact_learner_last_course_visit flfc\n    on fes.org = flfc.org\n    and fes.course_key = flfc.course_key\n    and fes.actor_id = flfc.actor_id\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nleft join reporting.most_recent_course_tags mrct on mrct.course_key = fes.course_key\nwhere\n    enrollment_status = \'registered\'\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[course_information_de_DE](id:743)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'N\ëJ\ä#Qª¨\×\ìÝl+´',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',744,'ab_user_pt_PT','last_login',NULL,2,1,1,0,NULL,0,NULL,'superset','select * from superset.ab_user\n',NULL,'[Superset Metadata].[ab_user_pt_PT](id:744)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary '\àH\Ý#$SS)w\Þ',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',745,'xapi_events_all_parsed_he','emission_time',NULL,1,1,1,0,NULL,0,NULL,'xapi','select * from xapi.xapi_events_all_parsed\n',NULL,'[OpenedX Clickhouse].[xapi_events_all_parsed_he](id:745)',0,NULL,0,NULL,'[OpenedX Clickhouse].[xapi]','{}',_binary '\Ñ#\ÉYM¨\Ó&9E\á',0,NULL,1,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',746,'fact_at_risk_video_plays_da','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    video_plays as (\n        with\n            plays as (\n                select *\n                from reporting.fact_video_plays\n                where\n\n                    {% if get_filters(\"course_name\", remove_filter=True) == [] %} 1 = 1\n                    {% elif filter_values(\"course_name\") != [] %}\n                        course_name in {{ filter_values(\"course_name\") | where_in }}\n                    {% else %} 1 = 0\n                    {% endif %}\n\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select *\n        from plays\n    )\n\nselect video_plays.*\nfrom video_plays\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_video_plays_da](id:746)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary '?Ø\âW§Æg^§i',0,NULL,1,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',747,'fact_enrollment_pii_de_DE',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    enrollments as (\n        select\n            enrollment.actor_id,\n            enrollment.course_key,\n            enrollment.org,\n            course_names.course_name as course_name\n        from reporting.fact_enrollment_status enrollment\n        inner join\n            event_sink.course_names as course_names\n            -- Need to cast the course key to a string here otherwise the\n            -- course_names dictionary throws this:\n            -- Key type for complex key at position 0 does not match, expected String,\n            -- found LowCardinality(String).\n            on course_names.course_key = enrollment.course_key::String\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    users.username as username,\n    users.email as email,\n    users.name as name,\n    enrollments.org as org,\n    enrollments.course_key as course_key,\n    enrollments.course_name as course_name\nfrom enrollments\ninner join\n    reporting.dim_user_pii as users\n    on (\n        enrollments.actor_id like \'mailto:%\'\n        and SUBSTRING(enrollments.actor_id, 8) = users.email\n    )\n    or enrollments.actor_id = toString(users.external_user_id)\n',NULL,'[OpenedX Clickhouse].[fact_enrollment_pii_de_DE](id:747)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'ÿ«Õª]8tÛU©',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',748,'course_names_uk',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select * from event_sink.course_names\n',NULL,'[OpenedX Clickhouse].[course_names_uk](id:748)',0,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]','{}',_binary 'Ãz\ØYáØ«AT\ì¬',0,NULL,1,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',749,'problem_coursewide_avg_th','emission_time',NULL,1,1,1,0,NULL,0,NULL,NULL,'-- See int_problem_results.sql for more context\nwith\n    successful_responses as (\n        select\n            org, course_key, problem_id, actor_id::String as actor_id, first_success_at\n        from xapi.responses\n        where\n            isNotNull(first_success_at)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id::String as actor_id,\n            max(last_attempt_at) as last_attempt_at\n        from xapi.responses\n        where\n            actor_id not in (select distinct actor_id from successful_responses)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by org, course_key, problem_id, actor_id\n    ),\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_attempt_at as emission_time\n        from unsuccessful_responses\n    ),\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.problem_events events\n        join responses using (org, course_key, problem_id, actor_id, emission_time)\n    ),\n    -- Aggregating course-wide averages and percentages\n    coursewide_attempts as (\n        select\n            org,\n            course_key,\n            problem_id,\n            avg(case when success then attempts else 0 end) as avg_correct_attempts,\n            avg(\n                case when not success then attempts else 0 end\n            ) as avg_incorrect_attempts,\n            sum(case when success then 1 else 0 end)::float\n            / count(*) as coursewide_percent_correct\n        from full_responses\n        group by org, course_key, problem_id\n    )\n\nselect\n    full_responses.emission_time as emission_time,\n    full_responses.org as org,\n    full_responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    full_responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    concat(\n        \'<a href=\"\',\n        full_responses.object_id,\n        \'\" target=\"_blank\">\',\n        problem_name_with_location,\n        \'</a>\'\n    ) as problem_link,\n    full_responses.actor_id as actor_id,\n    full_responses.responses as responses,\n    full_responses.success as success,\n    full_responses.attempts as attempts,\n    full_responses.interaction_type as interaction_type,\n    blocks.graded as graded,\n    users.username as username,\n    users.email as email,\n    users.name as name,\n    -- Aggregated values from the coursewide_attempts CTE\n    coursewide_attempts.avg_correct_attempts as avg_correct_attempts_coursewide,\n    coursewide_attempts.avg_incorrect_attempts as avg_incorrect_attempts_coursewide,\n    coursewide_attempts.coursewide_percent_correct as coursewide_percent_correct,\n    -- Learner-specific calculations (correcting the percentage calculations)\n    (\n        case when full_responses.success then full_responses.attempts else 0 end\n    ) as correct_attempts_by_learner,\n    (\n        case when not full_responses.success then full_responses.attempts else 0 end\n    ) as incorrect_attempts_by_learner,\n    -- Ensure we calculate percentage based on total attempts per problem (multiplied\n    -- by 100 only once)\n    (\n        sum(case when full_responses.success then 1 else 0 end) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        ) / count(*) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        )\n    ) as selected_learner_percent_correct,\n    (\n        sum(case when not full_responses.success then 1 else 0 end) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        ) / count(*) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        )\n    ) as selected_learner_percent_incorrect\nfrom full_responses\njoin\n    reporting.dim_course_blocks blocks\n    on (\n        full_responses.course_key = blocks.course_key\n        and full_responses.problem_id = blocks.block_id\n    )\nleft outer join\n    event_sink.user_pii users\n    on (\n        full_responses.actor_id like \'mailto:%\'\n        and SUBSTRING(full_responses.actor_id, 8) = users.email\n    )\n    or full_responses.actor_id = toString(users.external_user_id)\njoin\n    coursewide_attempts\n    on full_responses.org = coursewide_attempts.org\n    and full_responses.course_key = coursewide_attempts.course_key\n    and full_responses.problem_id = coursewide_attempts.problem_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[problem_coursewide_avg_th](id:749)',1,NULL,0,NULL,NULL,NULL,_binary '\éA\Ü\\¡J¨I\ðþ',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',750,'indexed_events_hi','emission_time',NULL,1,1,1,0,NULL,0,NULL,'xapi','with\n    events as (\n        select\n            event_id,\n            CAST(emission_time, \'DateTime\') as emission_time,\n            actor_id,\n            object_id,\n            splitByString(\'/\', course_id)[-1] as course_key,\n            org,\n            verb_id\n        from xapi.xapi_events_all_parsed\n    )\n\nselect\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    event_id,\n    actor_id,\n    object_id,\n    events.course_key,\n    events.org,\n    events.verb_id,\n    emission_time\nfrom events\njoin event_sink.course_names courses on (events.course_key = courses.course_key)\n',NULL,'[OpenedX Clickhouse].[indexed_events_hi](id:750)',1,NULL,0,NULL,'[OpenedX Clickhouse].[xapi]','{}',_binary 'Âª¦\n>\\\\·\áÝ£\ÖÓµ',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',751,'fact_enrollment_status_tr_TR','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select * from reporting.fact_enrollment_status\n',NULL,'[OpenedX Clickhouse].[fact_enrollment_status_tr_TR](id:751)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'FIþ³Qý·Zÿ\áÁ.\Ç\õ',0,NULL,0,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',752,'fact_watched_video_segments_en','started_at',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    video_events as (\n        select\n            emission_time,\n            org,\n            course_key,\n            splitByString(\'/xblock/\', object_id)[-1] as video_id,\n            object_id,\n            actor_id,\n            verb_id,\n            video_position,\n            video_duration\n        from xapi.video_playback_events\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    starts as (\n        select *\n        from video_events\n        where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n    ),\n    ends as (\n        select *\n        from video_events\n        where\n            verb_id in (\n                \'http://adlnet.gov/expapi/verbs/completed\',\n                \'https://w3id.org/xapi/video/verbs/seeked\',\n                \'https://w3id.org/xapi/video/verbs/paused\',\n                \'http://adlnet.gov/expapi/verbs/terminated\'\n            )\n    ),\n    segments as (\n        select\n            starts.org as org,\n            starts.course_key as course_key,\n            starts.video_id as video_id,\n            starts.actor_id,\n            starts.object_id as object_id,\n            cast(starts.video_position as Int32) as start_position,\n            cast(ends.video_position as Int32) as end_position,\n            starts.emission_time as started_at,\n            ends.emission_time as ended_at,\n            ends.verb_id as end_type,\n            starts.video_duration as video_duration\n        from starts left\n        asof join\n            ends\n            on (\n                starts.org = ends.org\n                and starts.course_key = ends.course_key\n                and starts.video_id = ends.video_id\n                and starts.actor_id = ends.actor_id\n                and starts.emission_time < ends.emission_time\n            )\n    ),\n    enriched_segments as (\n        select\n            segments.org as org,\n            segments.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            blocks.section_with_name as section_with_name,\n            blocks.subsection_with_name as subsection_with_name,\n            blocks.block_name as video_name,\n            blocks.display_name_with_location as video_name_with_location,\n            segments.actor_id as actor_id,\n            segments.object_id as object_id,\n            segments.started_at as started_at,\n            segments.start_position - (segments.start_position % 5) as start_position,\n            segments.end_position - (segments.end_position % 5) as end_position,\n            segments.video_duration as video_duration,\n            segments.video_id as video_id\n        from segments\n        join\n            reporting.dim_course_blocks_extended blocks\n            on (\n                segments.course_key = blocks.course_key\n                and segments.video_id = blocks.block_id\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_id,\n    concat(\n        \'<a href=\"\', object_id, \'\" target=\"_blank\">\', video_name_with_location, \'</a>\'\n    ) as video_link,\n    actor_id,\n    started_at,\n    arrayJoin(range(start_position, end_position, 5)) as segment_start,\n    video_duration,\n    CONCAT(toString(segment_start), \'-\', toString(segment_start + 4)) as segment_range,\n    start_position,\n    username,\n    name,\n    email\nfrom enriched_segments\nleft outer join\n    reporting.dim_user_pii users\n    on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)\norder by segment_start\n',NULL,'[OpenedX Clickhouse].[fact_watched_video_segments_en](id:752)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '\Í%N«\à\ÂW\á%{$®\÷@\"',0,NULL,1,0),('2025-01-10 06:45:57','2025-01-14 07:53:22',753,'learner_performance_uk',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.responses\n        join\n            xapi.problem_events events using (\n                org, course_key, problem_id, actor_id, emission_time\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    int_problem_results as (\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                blocks.display_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    success,\n    attempts,\n    course_grade,\n    approving_state\nfrom reporting.fact_student_status\nleft join int_problem_results\nusing org, course_key, course_run, actor_id, course_name\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_performance_uk](id:753)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '\Éú¨\Ã]#¡¶²m)Y}',0,NULL,0,0),('2025-01-10 06:45:58','2025-01-14 07:53:22',754,'course_overviews_ru',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select * from event_sink.course_overviews\n',NULL,'[OpenedX Clickhouse].[course_overviews_ru](id:754)',0,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]','{}',_binary '¯ÿ\Ö\à³PÌ^\Å	B',0,NULL,1,0),('2025-01-10 06:45:58','2025-01-14 07:53:22',755,'course_information_uk','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org as org,\n    cn.course_name as course_name,\n    course_run,\n    fes.actor_id as actor_id,\n    fes.enrollment_mode as enrollment_mode,\n    case\n        when flfc.emission_time >= subtractDays(now(), 7) then actor_id else null\n    end as active_learner,\n    tag as course_tag,\n    fes.course_key as course_key\nfrom reporting.fact_enrollment_status fes\nleft join\n    xapi.fact_learner_last_course_visit flfc\n    on fes.org = flfc.org\n    and fes.course_key = flfc.course_key\n    and fes.actor_id = flfc.actor_id\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key 