g]',NULL,_binary '4∂\˜ê^í¨´Ñmc	•8',0,NULL,0,0),('2025-01-10 06:45:31','2025-01-14 07:53:02',478,'ab_user_ar','last_login',NULL,2,1,1,0,NULL,0,NULL,'superset','select * from superset.ab_user\n',NULL,'[Superset Metadata].[ab_user_ar](id:478)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary ' ïüR6™é˚2goW',0,NULL,0,0),('2025-01-10 06:45:32','2025-01-14 07:53:02',479,'watched_video_duration_it_IT',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    course_keys as (\n        select [] as course_key\n        {% if filter_values(\"course_name\") != [] %}\n            union all\n            select array(course_key) as course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        {% endif %}\n        {% if filter_values(\"tag\") != [] %}\n            union distinct\n            select array(course_key) as course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        {% endif %}\n    )\nselect\n    names.org as org,\n    names.course_key as course_key,\n    names.course_name as course_name,\n    names.course_run as course_run,\n    actor_id,\n    video_count,\n    video_duration,\n    watched_time,\n    rewatched_time,\n    object_id\nfrom\n    reporting.watched_video_duration(\n        org_filter = coalesce({{ filter_values(\"org\") }}, []),\n        course_key_filter\n        = coalesce((select array_concat_agg(course_key) from course_keys), [])\n    ) as a\nleft join\n    event_sink.course_names as names\n    on a.org = names.org\n    and a.course_key = names.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[watched_video_duration_it_IT](id:479)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'o\Êù[\0Ü%ùæ\Ï\"	f',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:02',480,'fact_video_engagement_es_ES',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.subsection_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.section_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    video_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    ve.org as org,\n    ve.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    ve.content_level as content_level,\n    ve.actor_id as actor_id,\n    ve.section_subsection_video_engagement as section_subsection_video_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom video_engagement ve\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        ve.org = course_blocks.org\n        and ve.course_key = course_blocks.course_key\n        and ve.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (ve.actor_id like \'mailto:%\' and SUBSTRING(ve.actor_id, 8) = users.email)\n    or ve.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_video_engagement_es_ES](id:480)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary '˚(¡Èô±U$Çô±XL]69',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:02',481,'fact_at_risk_problem_engagement_de_DE',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    fact_problem_engagement as (\n        with\n            subsection_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'subsection\' as content_level,\n                    actor_id,\n                    subsection_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.subsection_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n\n            ),\n            section_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'section\' as content_level,\n                    actor_id,\n                    section_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.section_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            problem_engagement as (\n                select *\n                from subsection_engagement\n                union all\n                select *\n                from section_engagement\n            )\n        select\n            pe.org as org,\n            pe.course_key as course_key,\n            course_blocks.course_run as course_run,\n            course_blocks.display_name_with_location as section_subsection_name,\n            pe.content_level as content_level,\n            pe.actor_id as actor_id,\n            pe.section_subsection_problem_engagement\n            as section_subsection_problem_engagement,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from problem_engagement pe\n        join\n            reporting.dim_course_blocks course_blocks\n            on (\n                pe.org = course_blocks.org\n                and pe.course_key = course_blocks.course_key\n                and pe.block_id = course_blocks.block_id\n            )\n        left outer join\n            reporting.dim_user_pii users\n            on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n            or pe.actor_id = toString(users.external_user_id)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\nselect fact_problem_engagement.*\nfrom fact_problem_engagement pe\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners\n    on (\n        pe.org = at_risk_learners.org\n        and pe.course_key = at_risk_learners.course_key\n        and pe.actor_id = at_risk_learners.actor_id\n    )\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_problem_engagement_de_DE](id:481)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary ')£KfëmX£ön˘∂≤\ÁÆ',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',482,'fact_pageview_engagement_uk',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.subsection_page_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.section_page_engagement\n    ),\n    page_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\n\nselect\n    pv.org as org,\n    pv.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    pv.content_level as content_level,\n    pv.actor_id as actor_id,\n    pv.section_subsection_page_engagement as section_subsection_page_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom page_engagement pv\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        pv.org = course_blocks.org\n        and pv.course_key = course_blocks.course_key\n        and pv.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (pv.actor_id like \'mailto:%\' and SUBSTRING(pv.actor_id, 8) = users.email)\n    or pv.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_pageview_engagement_uk](id:482)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'AÖ6,3F^Í†æ>√Ωl\√',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',483,'fact_problem_engagement_es_ES',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_problem_engagement\n        from xapi.subsection_problem_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_problem_engagement\n        from xapi.section_problem_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    problem_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    pe.org as org,\n    pe.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    pe.content_level as content_level,\n    pe.actor_id as actor_id,\n    pe.section_subsection_problem_engagement as section_subsection_problem_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom problem_engagement pe\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        pe.org = course_blocks.org\n        and pe.course_key = course_blocks.course_key\n        and pe.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n    or pe.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_problem_engagement_es_ES](id:483)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary '-W©\Ì≤cSŒõ\Únxaå®',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',484,'enrollment_status_es_419','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org,\n    fes.course_key,\n    fes.actor_id,\n    fes.enrollment_status,\n    fes.enrollment_mode,\n    fes.emission_time,\n    cn.course_name,\n    cn.course_run\nfrom reporting.fact_enrollment_status fes\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[enrollment_status_es_419](id:484)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '˚ΩPìQò;Sãxå≥:',0,NULL,0,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',485,'slowest_clickhouse_queries_id','event_time',NULL,1,1,1,0,NULL,0,NULL,'system','select\n    event_time,\n    query_duration_ms / 1000 as duration_secs,\n    read_rows,\n    memory_usage / 1024 as memory_usage_kb,\n    query\nfrom system.query_log\nwhere type = \'QueryFinish\'\norder by query_duration_ms DESC\n;\n',NULL,'[OpenedX Clickhouse].[slowest_clickhouse_queries_id](id:485)',1,NULL,0,NULL,'[OpenedX Clickhouse].[system]','{}',_binary 'øP&˚djW?Øo_\Ù\ÛÑÀç',0,NULL,0,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',486,'problem_coursewide_avg_pt_BR','emission_time',NULL,1,1,1,0,NULL,0,NULL,NULL,'-- See int_problem_results.sql for more context\nwith\n    successful_responses as (\n        select\n            org, course_key, problem_id, actor_id::String as actor_id, first_success_at\n        from xapi.responses\n        where\n            isNotNull(first_success_at)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id::String as actor_id,\n            max(last_attempt_at) as last_attempt_at\n        from xapi.responses\n        where\n            actor_id not in (select distinct actor_id from successful_responses)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by org, course_key, problem_id, actor_id\n    ),\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_attempt_at as emission_time\n        from unsuccessful_responses\n    ),\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.problem_events events\n        join responses using (org, course_key, problem_id, actor_id, emission_time)\n    ),\n    -- Aggregating course-wide averages and percentages\n    coursewide_attempts as (\n        select\n            org,\n            course_key,\n            problem_id,\n            avg(case when success then attempts else 0 end) as avg_correct_attempts,\n            avg(\n                case when not success then attempts else 0 end\n            ) as avg_incorrect_attempts,\n            sum(case when success then 1 else 0 end)::float\n            / count(*) as coursewide_percent_correct\n        from full_responses\n        group by org, course_key, problem_id\n    )\n\nselect\n    full_responses.emission_time as emission_time,\n    full_responses.org as org,\n    full_responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    full_responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    concat(\n        \'<a href=\"\',\n        full_responses.object_id,\n        \'\" target=\"_blank\">\',\n        problem_name_with_location,\n        \'</a>\'\n    ) as problem_link,\n    full_responses.actor_id as actor_id,\n    full_responses.responses as responses,\n    full_responses.success as success,\n    full_responses.attempts as attempts,\n    full_responses.interaction_type as interaction_type,\n    blocks.graded as graded,\n    users.username as username,\n    users.email as email,\n    users.name as name,\n    -- Aggregated values from the coursewide_attempts CTE\n    coursewide_attempts.avg_correct_attempts as avg_correct_attempts_coursewide,\n    coursewide_attempts.avg_incorrect_attempts as avg_incorrect_attempts_coursewide,\n    coursewide_attempts.coursewide_percent_correct as coursewide_percent_correct,\n    -- Learner-specific calculations (correcting the percentage calculations)\n    (\n        case when full_responses.success then full_responses.attempts else 0 end\n    ) as correct_attempts_by_learner,\n    (\n        case when not full_responses.success then full_responses.attempts else 0 end\n    ) as incorrect_attempts_by_learner,\n    -- Ensure we calculate percentage based on total attempts per problem (multiplied\n    -- by 100 only once)\n    (\n        sum(case when full_responses.success then 1 else 0 end) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        ) / count(*) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        )\n    ) as selected_learner_percent_correct,\n    (\n        sum(case when not full_responses.success then 1 else 0 end) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        ) / count(*) over (\n            partition by full_responses.actor_id, full_responses.problem_id\n        )\n    ) as selected_learner_percent_incorrect\nfrom full_responses\njoin\n    reporting.dim_course_blocks blocks\n    on (\n        full_responses.course_key = blocks.course_key\n        and full_responses.problem_id = blocks.block_id\n    )\nleft outer join\n    event_sink.user_pii users\n    on (\n        full_responses.actor_id like \'mailto:%\'\n        and SUBSTRING(full_responses.actor_id, 8) = users.email\n    )\n    or full_responses.actor_id = toString(users.external_user_id)\njoin\n    coursewide_attempts\n    on full_responses.org = coursewide_attempts.org\n    and full_responses.course_key = coursewide_attempts.course_key\n    and full_responses.problem_id = coursewide_attempts.problem_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[problem_coursewide_avg_pt_BR](id:486)',1,NULL,0,NULL,NULL,NULL,_binary '8	ß\”W‘ã7\–À™pB¸',0,NULL,0,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',487,'fact_student_status_ru','enrolled_at',NULL,1,1,1,0,NULL,0,NULL,'reporting','select * from reporting.fact_student_status\n',NULL,'[OpenedX Clickhouse].[fact_student_status_ru](id:487)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'Hç\Ù3Å\·X2ò™ê(\Ê`\0',0,NULL,0,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',488,'fact_enrollments_da','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    enrollments_base as (\n        select *\n        from reporting.fact_enrollments\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    enrollment_mode,\n    enrollment_status\nfrom enrollments_base\n',NULL,'[OpenedX Clickhouse].[fact_enrollments_da](id:488)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary 'GEzj(\\\Ô≥%V\r•πL',0,NULL,1,0),('2025-01-10 06:45:32','2025-01-14 07:53:03',489,'int_problem_results_it_IT','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    successful_responses as (\n        select\n            org, course_key, problem_id, actor_id::String as actor_id, first_success_at\n        from xapi.responses\n        where\n            isNotNull(first_success_at)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    -- for all learners who did not submit a successful response,\n    -- find the timestamp of the most recent unsuccessful response\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id::String as actor_id,\n            max(last_attempt_at) as last_attempt_at\n        from xapi.responses\n        where\n            actor_id not in (select distinct actor_id from successful_responses)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- combine result sets for successful and unsuccessful problem submissions\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_attempt_at as emission_time\n        from unsuccessful_responses\n    ),\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.problem_events events\n        join responses using (org, course_key, problem_id, actor_id, emission_time)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    full_responses.emission_time as emission_time,\n    full_responses.org as org,\n    full_responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    full_responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    concat(\n        \'<a href=\"\',\n        full_responses.object_id,\n        \'\" target=\"_blank\">\',\n        problem_name_with_location,\n        \'</a>\'\n    ) as problem_link,\n    full_responses.actor_id as actor_id,\n    full_responses.responses as responses,\n    full_responses.success as success,\n    full_responses.attempts as attempts,\n    full_responses.interaction_type as interaction_type,\n    blocks.graded as graded,\n    users.username as username,\n    users.email as email,\n    users.name as name\nfrom full_responses\njoin\n    reporting.dim_course_blocks blocks\n    on (\n        full_responses.course_key = blocks.course_key\n        and full_responses.problem_id = blocks.block_id\n    )\nleft outer join\n    event_sink.user_pii users\n    on (\n        full_responses.actor_id like \'mailto:%\'\n        and SUBSTRING(full_responses.actor_id, 8) = users.email\n    )\n    or full_responses.actor_id = toString(users.external_user_id)\n\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[int_problem_results_it_IT](id:489)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '∞L†\˜\Û^NÆ\·\n#/Ω-',0,NULL,0,0),('2025-01-10 06:45:33','2025-01-14 07:53:03',490,'watched_video_duration_tr_TR',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    course_keys as (\n        select [] as course_key\n        {% if filter_values(\"course_name\") != [] %}\n            union all\n            select array(course_key) as course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        {% endif %}\n        {% if filter_values(\"tag\") != [] %}\n            union distinct\n            select array(course_key) as course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        {% endif %}\n    )\nselect\n    names.org as org,\n    names.course_key as course_key,\n    names.course_name as course_name,\n    names.course_run as course_run,\n    actor_id,\n    video_count,\n    video_duration,\n    watched_time,\n    rewatched_time,\n    object_id\nfrom\n    reporting.watched_video_duration(\n        org_filter = coalesce({{ filter_values(\"org\") }}, []),\n        course_key_filter\n        = coalesce((select array_concat_agg(course_key) from course_keys), [])\n    ) as a\nleft join\n    event_sink.course_names as names\n    on a.org = names.org\n    and a.course_key = names.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[watched_video_duration_tr_TR](id:490)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'poÇ≠^\ÔX\‡ä+Ä¨N\⁄\˜',0,NULL,1,0),('2025-01-10 06:45:33','2025-01-14 07:53:03',491,'fact_at_risk_pageview_engagement_de_DE',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','select fact_pageview_engagement.*\nfrom reporting.fact_pageview_engagement\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_pageview_engagement_de_DE](id:491)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary '∫á•»áEYC≤\¬§√£ÖO',0,NULL,1,0),('2025-01-10 06:45:33','2025-01-14 07:53:03',492,'dim_at_risk_learners_he',NULL,NULL,1,1,1,0,NULL,0,