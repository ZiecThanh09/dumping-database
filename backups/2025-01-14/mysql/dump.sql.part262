',NULL,_binary 'ê\·QÀ∑ùLQÆp\Œ‰∑™ö','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9511,783,'video_link',0,1,'String',1,1,NULL,1,1,NULL,'Video Link',NULL,_binary 'ã\«8c\ﬁ\ÃB≠ãµâL?D\—\≈','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9512,783,'segment_range',0,1,'String',1,1,NULL,1,1,NULL,'Segment Range',NULL,_binary '0\Zj_Å∞K∑-lIJ¢\÷:','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9513,783,'org',0,1,'LowCardinality(String)',1,1,NULL,1,1,'','–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',NULL,_binary '\ˆ\«aùâL/≤\ÕG\Z\‰W\ˆ6','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9514,783,'email',0,1,'String',1,1,NULL,1,1,NULL,'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞',NULL,_binary '9o\ıc/nD]àSo\ﬁ\Ú6P','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9515,783,'name',0,1,'String',1,1,NULL,1,1,NULL,'–ò–º—è',NULL,_binary '¶\Ú•uø\œKjö\‡jr\Ï§','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:00','2025-01-10 06:46:00',9516,783,'username',0,1,'String',1,1,NULL,1,1,NULL,'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',NULL,_binary 'µÅ∞ùõ\›Oè\»\⁄I©é8','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9517,784,'active_within_last_7_days',0,1,'UInt64',1,1,NULL,1,1,NULL,'Active Within Last 7 Days',NULL,_binary '\ŒqÇ˝\»\ıE’Ü|T°{&)','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9518,784,'course_key',0,1,'LowCardinality(String)',1,1,NULL,1,1,NULL,'Kursschl√ºssel',NULL,_binary 'u^bBÑgG:©\‚ g_©,\Ù','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9519,784,'enrollment_mode',0,1,'LowCardinality(String)',1,1,NULL,1,1,NULL,'Einschreibungsmodus',NULL,_binary '¨\«ƒ¢¡∫C\Ó≥T≠I\È\Ú;\–','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9520,784,'course_grade',0,1,'Float64',1,1,NULL,1,1,NULL,'Course Grade',NULL,_binary 'Fúú™ñG>é\ÊyˇBô','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9521,784,'enrolled_at',1,1,'DateTime',1,1,NULL,1,1,NULL,'Enrolled At',NULL,_binary 'òÖ>≠ûOCóâ«°;¨æ≥','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9522,784,'actor_id',0,1,'String',1,1,NULL,1,1,NULL,'Schauspieler-ID',NULL,_binary 'Dz˝xuH\'ò\Ù≤(À¶','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9523,784,'approving_state',0,1,'String',1,1,NULL,1,1,NULL,'Approving State',NULL,_binary 'ñ[\Ôö\‡KÖüà6NÆ\'ô','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9524,784,'grade_bucket',0,1,'String',1,1,NULL,1,1,NULL,'G√ºteeimer',NULL,_binary '\ÿ+æ¿DÉKûïﬂê5#cKÜ','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9525,784,'course_name',0,1,'String',1,1,NULL,1,1,NULL,'Kursname',NULL,_binary '∑8\«AMMKQÖú,ÿ¥\Á\ÒX','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9526,784,'course_run',0,1,'String',1,1,NULL,1,1,NULL,'Kursverlauf',NULL,_binary 'E£møªF8≤TØ2\Ëø}\"','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9527,784,'enrollment_status',0,1,'String',1,1,NULL,1,1,NULL,'Registrierungsstatus',NULL,_binary '@Äg|°NY§\"˛¨\Ôÿ∑','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9528,784,'org',0,1,'LowCardinality(String)',1,1,NULL,1,1,NULL,'Organsation',NULL,_binary '~yYf\·≥J‘≤∂Øû<','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9529,784,'email',0,1,'String',1,1,NULL,1,1,NULL,'Email',NULL,_binary 'C†¶\Â\’;J™åJ\Ê¿c\Ô\‡A','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9530,784,'name',0,1,'String',1,1,NULL,1,1,NULL,'Name',NULL,_binary '\Ï\ˆû\È\Ÿ¯D(Ü7\‚\’\Áå','{\"warning_markdown\": null}',NULL),('2025-01-10 06:46:01','2025-01-10 06:46:01',9531,784,'username',0,1,'String',1,1,NULL,1,1,NULL,'Nutzername',NULL,_binary ';w\ÚTe\ÏB[ø\Ú¯\·\Ë»â\Í','{\"warning_markdown\": null}',NULL);
/*!40000 ALTER TABLE `table_columns` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `table_schema`
--

DROP TABLE IF EXISTS `table_schema`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `table_schema` (
  `created_on` datetime DEFAULT NULL,
  `changed_on` datetime DEFAULT NULL,
  `extra_json` mediumtext,
  `id` int NOT NULL AUTO_INCREMENT,
  `tab_state_id` int DEFAULT NULL,
  `database_id` int NOT NULL,
  `schema` varchar(256) DEFAULT NULL,
  `table` varchar(256) DEFAULT NULL,
  `description` longtext,
  `expanded` tinyint(1) DEFAULT NULL,
  `created_by_fk` int DEFAULT NULL,
  `changed_by_fk` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `ix_table_schema_id` (`id`),
  KEY `changed_by_fk` (`changed_by_fk`),
  KEY `created_by_fk` (`created_by_fk`),
  KEY `tab_state_id` (`tab_state_id`),
  KEY `table_schema_database_id_fkey` (`database_id`),
  CONSTRAINT `table_schema_database_id_fkey` FOREIGN KEY (`database_id`) REFERENCES `dbs` (`id`) ON DELETE CASCADE,
  CONSTRAINT `table_schema_ibfk_1` FOREIGN KEY (`changed_by_fk`) REFERENCES `ab_user` (`id`),
  CONSTRAINT `table_schema_ibfk_2` FOREIGN KEY (`created_by_fk`) REFERENCES `ab_user` (`id`),
  CONSTRAINT `table_schema_ibfk_4` FOREIGN KEY (`tab_state_id`) REFERENCES `tab_state` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `table_schema`
--

LOCK TABLES `table_schema` WRITE;
/*!40000 ALTER TABLE `table_schema` DISABLE KEYS */;
/*!40000 ALTER TABLE `table_schema` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tables`
--

DROP TABLE IF EXISTS `tables`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tables` (
  `created_on` datetime DEFAULT NULL,
  `changed_on` datetime DEFAULT NULL,
  `id` int NOT NULL AUTO_INCREMENT,
  `table_name` varchar(250) NOT NULL,
  `main_dttm_col` varchar(250) DEFAULT NULL,
  `default_endpoint` text,
  `database_id` int NOT NULL,
  `created_by_fk` int DEFAULT NULL,
  `changed_by_fk` int DEFAULT NULL,
  `offset` int DEFAULT NULL,
  `description` text,
  `is_featured` tinyint(1) DEFAULT NULL,
  `cache_timeout` int DEFAULT NULL,
  `schema` varchar(255) DEFAULT NULL,
  `sql` text,
  `params` text,
  `perm` varchar(1000) DEFAULT NULL,
  `filter_select_enabled` tinyint(1) DEFAULT NULL,
  `fetch_values_predicate` text,
  `is_sqllab_view` tinyint(1) DEFAULT '0',
  `template_params` text,
  `schema_perm` varchar(1000) DEFAULT NULL,
  `extra` text,
  `uuid` binary(16) DEFAULT NULL,
  `is_managed_externally` tinyint(1) NOT NULL DEFAULT '0',
  `external_url` text,
  `normalize_columns` tinyint(1) DEFAULT '0',
  `always_filter_main_dttm` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uq_tables_uuid` (`uuid`),
  KEY `database_id` (`database_id`),
  KEY `created_by_fk` (`created_by_fk`),
  KEY `changed_by_fk` (`changed_by_fk`),
  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`database_id`) REFERENCES `dbs` (`id`),
  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`created_by_fk`) REFERENCES `ab_user` (`id`),
  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`changed_by_fk`) REFERENCES `ab_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=785 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tables`
--

LOCK TABLES `tables` WRITE;
/*!40000 ALTER TABLE `tables` DISABLE KEYS */;
INSERT INTO `tables` VALUES ('2025-01-10 06:44:46','2025-01-14 07:52:25',1,'fact_at_risk_watched_video_segments_uk','started_at',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watches as (\n        with\n            video_events as (\n                select\n                    emission_time,\n                    org,\n                    course_key,\n                    splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                    object_id,\n                    actor_id,\n                    verb_id,\n                    video_position,\n                    video_duration\n                from xapi.video_playback_events\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            starts as (\n                select *\n                from video_events\n                where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n            ),\n            ends as (\n                select *\n                from video_events\n                where\n                    verb_id in (\n                        \'http://adlnet.gov/expapi/verbs/completed\',\n                        \'https://w3id.org/xapi/video/verbs/seeked\',\n                        \'https://w3id.org/xapi/video/verbs/paused\',\n                        \'http://adlnet.gov/expapi/verbs/terminated\'\n                    )\n            ),\n            segments as (\n                select\n                    starts.org as org,\n                    starts.course_key as course_key,\n                    starts.video_id as video_id,\n                    starts.actor_id,\n                    starts.object_id as object_id,\n                    cast(starts.video_position as Int32) as start_position,\n                    cast(ends.video_position as Int32) as end_position,\n                    starts.emission_time as started_at,\n                    ends.emission_time as ended_at,\n                    ends.verb_id as end_type,\n                    starts.video_duration as video_duration\n                from starts left\n                asof join\n                    ends\n                    on (\n                        starts.org = ends.org\n                        and starts.course_key = ends.course_key\n                        and starts.video_id = ends.video_id\n                        and starts.actor_id = ends.actor_id\n                        and starts.emission_time < ends.emission_time\n                    )\n            ),\n            enriched_segments as (\n                select\n                    segments.org as org,\n                    segments.course_key as course_key,\n                    blocks.course_name as course_name,\n                    blocks.course_run as course_run,\n                    blocks.section_with_name as section_with_name,\n                    blocks.subsection_with_name as subsection_with_name,\n                    blocks.block_name as video_name,\n                    blocks.display_name_with_location as video_name_with_location,\n                    segments.actor_id as actor_id,\n                    segments.object_id as object_id,\n                    segments.started_at as started_at,\n                    segments.start_position\n                    - (segments.start_position % 5) as start_position,\n                    segments.end_position - (segments.end_position % 5) as end_position,\n                    segments.video_duration as video_duration,\n                    segments.video_id as video_id\n                from segments\n                join\n                    reporting.dim_course_blocks_extended blocks\n                    on (\n                        segments.course_key = blocks.course_key\n                        and segments.video_id = blocks.block_id\n                    )\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_id,\n            concat(\n                \'<a href=\"\',\n                object_id,\n                \'\" target=\"_blank\">\',\n                video_name_with_location,\n                \'</a>\'\n            ) as video_link,\n            actor_id,\n            started_at,\n            arrayJoin(range(start_position, end_position, 5)) as segment_start,\n            video_duration,\n            CONCAT(\n                toString(segment_start), \'-\', toString(segment_start + 4)\n            ) as segment_range,\n            start_position,\n            username,\n            name,\n            email\n        from enriched_segments\n        left outer join\n            reporting.dim_user_pii users\n            on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n            or actor_id = toString(users.external_user_id)\n        order by segment_start\n    )\n\nselect watches.*\nfrom watches\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_watched_video_segments_uk](id:1)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary 'P|\÷©H_¶n\Ÿ<\Õ,\‰\·',0,NULL,1,0),('2025-01-10 06:44:46','2025-01-14 07:52:26',2,'course_information_fr_CA','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org as org,\n    cn.course_name as course_name,\n    course_run,\n    fes.actor_id as actor_id,\n    fes.enrollment_mode as enrollment_mode,\n    case\n        when flfc.emission_time >= subtractDays(now(), 7) then actor_id else null\n    end as active_learner,\n    tag as course_tag,\n    fes.course_key as course_key\nfrom reporting.fact_enrollment_status fes\nleft join\n    xapi.fact_learner_last_course_visit flfc\n    on fes.org = flfc.org\n    and fes.course_key = flfc.course_key\n    and fes.actor_id = flfc.actor_id\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nleft join reporting.most_recent_course_tags mrct on mrct.course_key = fes.course_key\nwhere\n    enrollment_status = \'registered\'\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[course_information_fr_CA](id:2)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'k∂\ÏûV<ßIó#I3¿5',0,NULL,0,0),('2025-01-10 06:44:46','2025-01-14 07:52:26',3,'int_problem_results_he','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    successful_responses as (\n        select\n            org, course_key, problem_id, actor_id::String as actor_id, first_success_at\n        from xapi.responses\n        where\n            isNotNull(first_success_at)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    -- for all learners who did not submit a successful response,\n    -- find the timestamp of the most recent unsuccessful response\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id::String as actor_id,\n            max(last_attempt_at) as last_attempt_at\n        from xapi.responses\n        where\n            actor_id not in (select distinct actor_id from successful_responses)\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- combine result sets for successful and unsuccessful problem submissions\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_attempt_at as emission_time\n        from unsuccessful_responses\n    ),\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.problem_events events\n        join responses using (org, course_key, problem_id, actor_id, emission_time)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    full_responses.emission_time as emission_time,\n    full_responses.org as org,\n    full_responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    full_responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    concat(\n        \'<a href=\"\',\n        full_responses.object_id,\n        \'\" target=\"_blank\">\',\n        problem_name_with_location,\n        \'</a>\'\n    ) as problem_link,\n    full_responses.actor_id as actor_id,\n    full_responses.responses as responses,\n    full_responses.success as success,\n    full_responses.attempts as attempts,\n    full_responses.interaction_type as interaction_type,\n    blocks.graded as graded,\n    users.username as username,\n    users.email as email,\n    users.name as name\nfrom full_responses\njoin\n    reporting.dim_course_blocks blocks\n    on (\n        full_responses.course_key = blocks.course_key\n        and full_responses.problem_id = blocks.block_id\n    )\nleft outer join\n    event_sink.user_pii users\n    on (\n        full_responses.actor_id like \'mailto:%\'\n        and SUBSTRING(full_responses.actor_id, 8) = users.email\n    )\n    or full_responses.actor_id = toString(users.external_user_id)\n\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[int_problem_results_he](id:3)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '\—qíJ^P^ßbXå\◊Gv\Ë',0,NULL,0,0),('2025-01-10 06:44:46','2025-01-14 07:52:26',4,'slowest_clickhouse_queries_ru','event_time',NULL,1,1,1,0,NULL,0,NULL,'system','select\n    event_time,\n    query_duration_ms / 1000 as duration_secs,\n    read_rows,\n    memory_usage / 1024 as memory_usage_kb,\n    query\nfrom system.query_log\nwhere type = \'QueryFinish\'\norder by query_duration_ms DESC\n;\n',NULL,'[OpenedX Clickhouse].[slowest_clickhouse_queries_ru](id:4)',1,NULL,0,NULL,'[OpenedX Clickhouse].[system]','{}',_binary 'úû≠\◊≈å_\Ûé\ÎY{*Z',0,NULL,0,0),('2025-01-10 06:44:46','2025-01-14 07:52:26',5,'fact_video_engagement_id',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.subsection_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.section_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    video_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    ve.org as org,\n    ve.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    ve.content_level as content_level,\n    ve.actor_id as actor_id,\n    ve.section_subsection_video_engagement as section_subsection_video_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom video_engagement ve\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        ve.org = course_blocks.org\n        and ve.course_key = course_blocks.course_key\n        and ve.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (ve.actor_id like \'mailto:%\' and SUBSTRING(ve.actor_id, 8) = users.email)\n    or ve.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_video_engagement_id](id:5)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary '2\Ò:Ö\Õ_\nöV≥wÆÜú=',0,NULL,1,0),('2025-01-10 06:44:46','2025-01-14 07:52:26',6,'query_log_el',NULL,NULL,1,1,1,0,NULL,0,NULL,'system','select\n    query_duration_ms,\n    result_rows,\n    memory_usage / (1024 * 1024) as memory_usage_mb,\n    event_time,\n    tables,\n    query,\n    http_user_agent\nfrom system.query_log\nwhere\n    (\n        has(databases, \'xapi\')\n        or has(databases, \'event_sink\')\n        or has(databases, \'reporting\')\n    )\n    and (http_user_agent like \'aspects-%\')\n    and (type = \'QueryFinish\')\norder by event_time DESC\n',NULL,'[OpenedX Clickhouse].[query_log_el](id:6)',1,NULL,0,NULL,'[OpenedX Clickhouse].[system]',NULL,_binary '4Ekµª\nWπã˘.£|ñ¶',0,NULL,0,0),('2025-01-10 06:44:46','2025-01-14 07:52:27',7,'fact_pageview_engagement_id',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.subsection_page_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.section_page_engagement\n    ),\n    page_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\n\nselect\n    pv.org as org,\n    pv.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    pv.content_level as content_level,\n    pv.actor_id as actor_id,\n    pv.section_subsection_page_engagement as section_subsection_page_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom page_engagement pv\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        pv.org = course_blocks.org\n        and pv.course_key = course_blocks.course_key\n        and pv.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (pv.actor_id like \'mailto:%\' and SUBSTRING(pv.actor_id, 8) = users.email)\n    or pv.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_pageview_engagement_id](id:7)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'f®l\«W+U?¶(9\‰1,',0,NULL,1,0),('2025-01-10 06:44:47','2025-01-14 07:52:27',8,'course_overviews_it_IT',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select * from event_sink.course_overviews\n',NULL,'[OpenedX Clickhouse].[course_overviews_it_IT](id:8)',0,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]','{}',_binary 'Z\‰>\≈MtW‚Ä∂=äd\÷\Ú',0,NULL,1,0),('2025-01-10 06:44:47','2025-01-14 07:52:27',9,'fact_video_engagement_es_419',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.subsection_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from xapi.section_video_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    video_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    ve.org as org,\n    ve.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    ve.content_level as content_level,\n    ve.actor_id as actor_id,\n    ve.section_subsection_video_engagement as section_subsection_video_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom video_engagement ve\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        ve.org = course_blocks.org\n        and ve.course_key = course_blocks.course_key\n        and ve.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (ve.actor_id like \'mailto:%\' and SUBSTRING(ve.actor_id, 8) = users.email)\n    or ve.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_video_engagement_es_419](id:9)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'PözáñTRüµrä\\\\&\Ès',0,NULL,1,0),('2025-01-10 06:44:47','2025-01-14 07:52:27',10,'enrollment_status_ru','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org,\n    fes.course_key,\n    fes.actor_id,\n    fes.enrollment_status,\n    fes.enrollment_mode,\n    fes.emission_time,\n    cn.course_name,\n    cn.course_run\nfrom reporting.fact_enrollment_status fes\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[enrollment_status_ru](id:10)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'ö\Ã\Û∏é]πú\ƒ\›9¨ü<\Ó',0,NULL,0,0),('2025-01-10 06:44:47','2025-01-14 07:52:27',11,'fact_student_status_plus_7_days_ru','enrolled_at',NULL,1,1,1,0,NULL,0,NULL,NULL,'with\n    recent_activity as (\n        select course_key, COUNT(DISTINCT actor_id) as active_last_7_days\n        from xapi.navigation_events\n        where\n            emission_time >= NOW() - INTERVAL 7 DAY\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by course_key\n    )\n\nselect fss.*, COALESCE(ra.active_last_7_days, 0) as active_within_last_7_days\nfrom reporting.fact_student_status fss\nleft join recent_activity ra on fss.course_key = ra.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_student_status_plus_7_days_ru](id:11)',1,NULL,0,NULL,NULL,NULL,_binary '¡Œé±qRﬁ≤˝\ÏV&\„+',0,NULL,0,0),('2025-01-10 06:44:47','2025-01-14 07:52:27',12,'fact_video_watches_pt_PT',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watched_segments as (\n        with\n            video_events as (\n                select\n                    emission_time,\n                    org,\n                    course_key,\n                    splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                    object_id,\n                    actor_id,\n                    verb_id,\n                    video_position,\n                    video_duration\n                from xapi.video_playback_events\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            starts as (\n                select *\n                from video_events\n                where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n            ),\n            ends as (\n                select *\n                from video_events\n                where\n                    verb_id in (\n                        \'http://adlnet.gov/expapi/verbs/completed\',\n                        \'https://w3id.org/xapi/video/verbs/seeked\',\n                        \'https://w3id.org/xapi/video/verbs/paused\',\n                        \'http://adlnet.gov/expapi/verbs/terminated\'\n                    )\n            ),\n            segments as (\n                select\n                    starts.org as org,\n                    starts.course_key as course_key,\n                    starts.video_id as video_id,\n                    starts.actor_id,\n                    starts.object_id as object_id,\n                    cast(starts.video_position as Int32) as start_position,\n                    cast(ends.video_position as Int32) as end_position,\n                    starts.emission_time as started_at,\n                    ends.emission_time as ended_at,\n                    ends.verb_id as end_type,\n                    starts.video_duration as video_duration\n                from starts left\n                asof join\n                    ends\n                    on (\n                        starts.org = ends.org\n                        and starts.course_key = ends.course_key\n                        and starts.video_id = ends.video_id\n                        and starts.actor_id = ends.actor_id\n                        and starts.emission_time < ends.emission_time\n                    )\n            ),\n            enriched_segments as (\n                select\n                    segments.org as org,\n                    segments.course_key as course_key,\n                    blocks.course_name as course_name,\n                    blocks.course_run as course_run,\n                    blocks.section_with_name as section_with_name,\n                    blocks.subsection_with_name as subsection_with_name,\n                    blocks.block_name as video_name,\n                    blocks.display_n