 in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[watched_video_duration_zh_CN](id:579)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '£§É\Áæ\⁄TØçp¡bí¢¯æ',0,NULL,1,0),('2025-01-10 06:45:41','2025-01-14 07:53:09',580,'learner_performance',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.responses\n        join\n            xapi.problem_events events using (\n                org, course_key, problem_id, actor_id, emission_time\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    int_problem_results as (\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                blocks.display_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    success,\n    attempts,\n    course_grade,\n    approving_state\nfrom reporting.fact_student_status\nleft join int_problem_results\nusing org, course_key, course_run, actor_id, course_name\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_performance](id:580)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'ˇ\√7ñº\‘Nã§\‰´e∑!',0,NULL,0,0),('2025-01-10 06:45:41','2025-01-14 07:53:09',581,'fact_enrollment_status_uk','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select * from reporting.fact_enrollment_status\n',NULL,'[OpenedX Clickhouse].[fact_enrollment_status_uk](id:581)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '©`)≠\∆PPdò\Ëw\≈\Á\˜s',0,NULL,0,0),('2025-01-10 06:45:41','2025-01-14 07:53:09',582,'fact_at_risk_problem_engagement_ru',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    fact_problem_engagement as (\n        with\n            subsection_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'subsection\' as content_level,\n                    actor_id,\n                    subsection_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.subsection_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n\n            ),\n            section_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'section\' as content_level,\n                    actor_id,\n                    section_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.section_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            problem_engagement as (\n                select *\n                from subsection_engagement\n                union all\n                select *\n                from section_engagement\n            )\n        select\n            pe.org as org,\n            pe.course_key as course_key,\n            course_blocks.course_run as course_run,\n            course_blocks.display_name_with_location as section_subsection_name,\n            pe.content_level as content_level,\n            pe.actor_id as actor_id,\n            pe.section_subsection_problem_engagement\n            as section_subsection_problem_engagement,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from problem_engagement pe\n        join\n            reporting.dim_course_blocks course_blocks\n            on (\n                pe.org = course_blocks.org\n                and pe.course_key = course_blocks.course_key\n                and pe.block_id = course_blocks.block_id\n            )\n        left outer join\n            reporting.dim_user_pii users\n            on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n            or pe.actor_id = toString(users.external_user_id)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\nselect fact_problem_engagement.*\nfrom fact_problem_engagement pe\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners\n    on (\n        pe.org = at_risk_learners.org\n        and pe.course_key = at_risk_learners.course_key\n        and pe.actor_id = at_risk_learners.actor_id\n    )\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_problem_engagement_ru](id:582)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary '\„*¡\Ÿ\ =[ÉôYq\À?ª\Î',0,NULL,1,0),('2025-01-10 06:45:41','2025-01-14 07:53:09',583,'fact_at_risk_video_plays_fr_CA','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    video_plays as (\n        with\n            plays as (\n                select *\n                from reporting.fact_video_plays\n                where\n\n                    {% if get_filters(\"course_name\", remove_filter=True) == [] %} 1 = 1\n                    {% elif filter_values(\"course_name\") != [] %}\n                        course_name in {{ filter_values(\"course_name\") | where_in }}\n                    {% else %} 1 = 0\n                    {% endif %}\n\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select *\n        from plays\n    )\n\nselect video_plays.*\nfrom video_plays\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_video_plays_fr_CA](id:583)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary '\√÷á\‘8SÌú£\“\0ôI]',0,NULL,1,0),('2025-01-10 06:45:41','2025-01-14 07:53:09',584,'ab_user_el','last_login',NULL,2,1,1,0,NULL,0,NULL,'superset','select * from superset.ab_user\n',NULL,'[Superset Metadata].[ab_user_el](id:584)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary 'I@àv!]QE®R\√¯ª\Â&',0,NULL,0,0),('2025-01-10 06:45:42','2025-01-14 07:53:10',585,'learner_performance_hi',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type\n        from xapi.responses\n        join\n            xapi.problem_events events using (\n                org, course_key, problem_id, actor_id, emission_time\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    int_problem_results as (\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                blocks.display_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    success,\n    attempts,\n    course_grade,\n    approving_state\nfrom reporting.fact_student_status\nleft join int_problem_results\nusing org, course_key, course_run, actor_id, course_name\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_performance_hi](id:585)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '\Ò¸\Ì%\»¸UºöHÉΩ\“_]\Ï',0,NULL,0,0),('2025-01-10 06:45:42','2025-01-14 07:53:10',586,'fact_at_risk_navigation_completion_zh_CN','visited_on',NULL,1,1,1,0,NULL,0,NULL,'reporting','select fnc.*\nfrom reporting.fact_navigation_completion fnc\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_navigation_completion_zh_CN](id:586)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '\√E\ﬁI\\ƒõ	í7/\¬6%',0,NULL,0,0),('2025-01-10 06:45:42','2025-01-14 07:53:10',587,'at_risk_coursewide_avg','emission_time',NULL,1,1,1,0,NULL,0,NULL,NULL,'with\n    problem_coursewide_avg as (\n        -- See int_problem_results.sql for more context\n        with\n            successful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    first_success_at\n                from xapi.responses\n                where\n                    isNotNull(first_success_at)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            unsuccessful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    max(last_attempt_at) as last_attempt_at\n                from xapi.responses\n                where\n                    actor_id not in (select distinct actor_id from successful_responses)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                group by org, course_key, problem_id, actor_id\n            ),\n            responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    first_success_at as emission_time\n                from successful_responses\n                union all\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    last_attempt_at as emission_time\n                from unsuccessful_responses\n            ),\n            full_responses as (\n                select\n                    events.emission_time as emission_time,\n                    events.org as org,\n                    events.course_key as course_key,\n                    events.problem_id as problem_id,\n                    events.object_id as object_id,\n                    events.actor_id as actor_id,\n                    events.responses as responses,\n                    events.success as success,\n                    events.attempts as attempts,\n                    events.interaction_type as interaction_type\n                from xapi.problem_events events\n                join\n                    responses using (\n                        org, course_key, problem_id, actor_id, emission_time\n                    )\n            ),\n            -- Aggregating course-wide averages and percentages\n            coursewide_attempts as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    avg(\n                        case when success then attempts else 0 end\n                    ) as avg_correct_attempts,\n                    avg(\n                        case when not success then attempts else 0 end\n                    ) as avg_incorrect_attempts,\n                    sum(case when success then 1 else 0 end)::float\n                    / count(*) as coursewide_percent_correct\n                from full_responses\n                group by org, course_key, problem_id\n            )\n\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                problem_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded as graded,\n            users.username as username,\n            users.email as email,\n            users.name as name,\n            -- Aggregated values from the coursewide_attempts CTE\n            coursewide_attempts.avg_correct_attempts as avg_correct_attempts_coursewide,\n            coursewide_attempts.avg_incorrect_attempts\n            as avg_incorrect_attempts_coursewide,\n            coursewide_attempts.coursewide_percent_correct\n            as coursewide_percent_correct,\n            -- Learner-specific calculations (correcting the percentage calculations)\n            (\n                case when full_responses.success then full_responses.attempts else 0 end\n            ) as correct_attempts_by_learner,\n            (\n                case\n                    when not full_responses.success then full_responses.attempts else 0\n                end\n            ) as incorrect_attempts_by_learner,\n            -- Ensure we calculate percentage based on total attempts per problem\n            -- (multiplied\n            -- by 100 only once)\n            (\n                sum(case when full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_correct,\n            (\n                sum(case when not full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_incorrect\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        left outer join\n            event_sink.user_pii users\n            on (\n                full_responses.actor_id like \'mailto:%\'\n                and SUBSTRING(full_responses.actor_id, 8) = users.email\n            )\n            or full_responses.actor_id = toString(users.external_user_id)\n        join\n            coursewide_attempts\n            on full_responses.org = coursewide_attempts.org\n            and full_responses.course_key = coursewide_attempts.course_key\n            and full_responses.problem_id = coursewide_attempts.problem_id\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect problem_coursewide_avg.*\nfrom problem_coursewide_avg\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\n',NULL,'[OpenedX Clickhouse].[at_risk_coursewide_avg](id:587)',1,NULL,0,NULL,NULL,NULL,_binary '£jy»≥CÏ≠ë3_\Œ€ä\'',0,NULL,0,0),('2025-01-10 06:45:42','2025-01-14 07:53:10',588,'superset_action_log_tr_TR',NULL,NULL,2,1,1,0,NULL,0,NULL,'superset','select\n    l.dttm as action_date,\n    case\n        when LOWER(l.action) = \'queries\'\n        then \'query from sqllab\'\n        when LOWER(l.action) = \'chartrestapi.data\'\n        then \'query from charts\'\n        when LOWER(l.action) = \'count\'\n        then \'dashboard view\'\n        when LOWER(l.action) like \'annotation%\'\n        then \'annotations\'\n        when LOWER(l.action) like \'css%\'\n        then \'CSS\'\n        else LOWER(l.action)\n    end as action,\n    l.user_id,\n    u.username as user_name,\n    u.created_on as user_registration_date,\n    l.dashboard_id,\n    d.dashboard_title,\n    case when d.published = TRUE then \'published\' else \'draft\' end as dashboard_status,\n    l.slice_id,\n    s.slice_name,\n    s.datasource_type,\n    s.datasource_name,\n    s.datasource_id,\n    COUNT(1) as action_count\nfrom logs as l\nleft join ab_user as u on u.id = l.user_id\nleft join dashboards as d on d.id = l.dashboard_id\nleft join slices as s on s.id = l.slice_id\nwhere 1 = 1 and l.action != \'log\'\ngroup by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n',NULL,'[Superset Metadata].[superset_action_log_tr_TR](id:588)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary '3âtΩDZà∂\ —õ™˚:â',0,NULL,0,0),('2025-01-10 06:45:42','2025-01-14 07:53:10',589,'fact_at_risk_problem_engagement_el',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    fact_problem_engagement as (\n        with\n            subsection_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'subsection\' as content_level,\n                    actor_id,\n                    subsection_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.subsection_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n\n            ),\n            section_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'section\' as content_level,\n                    actor_id,\n                    section_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.section_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            problem_engagement as (\n                select *\n                from subsection_engagement\n                union all\n                select *\n     