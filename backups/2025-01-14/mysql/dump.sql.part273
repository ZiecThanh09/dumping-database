- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_id,\n    concat(\n        \'<a href=\"\', object_id, \'\" target=\"_blank\">\', video_name_with_location, \'</a>\'\n    ) as video_link,\n    actor_id,\n    started_at,\n    arrayJoin(range(start_position, end_position, 5)) as segment_start,\n    video_duration,\n    CONCAT(toString(segment_start), \'-\', toString(segment_start + 4)) as segment_range,\n    start_position,\n    username,\n    name,\n    email\nfrom enriched_segments\nleft outer join\n    reporting.dim_user_pii users\n    on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)\norder by segment_start\n',NULL,'[OpenedX Clickhouse].[fact_watched_video_segments_es_419](id:153)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '\˜Bg\*\\õΩ⁄Æü\Ûº\Õ\Ô',0,NULL,1,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',154,'course_information_tr_TR','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','select\n    fes.org as org,\n    cn.course_name as course_name,\n    course_run,\n    fes.actor_id as actor_id,\n    fes.enrollment_mode as enrollment_mode,\n    case\n        when flfc.emission_time >= subtractDays(now(), 7) then actor_id else null\n    end as active_learner,\n    tag as course_tag,\n    fes.course_key as course_key\nfrom reporting.fact_enrollment_status fes\nleft join\n    xapi.fact_learner_last_course_visit flfc\n    on fes.org = flfc.org\n    and fes.course_key = flfc.course_key\n    and fes.actor_id = flfc.actor_id\nleft join\n    event_sink.course_names cn on fes.org = cn.org and fes.course_key = cn.course_key\nleft join reporting.most_recent_course_tags mrct on mrct.course_key = fes.course_key\nwhere\n    enrollment_status = \'registered\'\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[course_information_tr_TR](id:154)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary 'ª\ı(\–\ÿ-[√±\nõ\∆*g\«',0,NULL,0,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',155,'fact_problem_engagement_en',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_problem_engagement\n        from xapi.subsection_problem_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_problem_engagement\n        from xapi.section_problem_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    problem_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    pe.org as org,\n    pe.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    pe.content_level as content_level,\n    pe.actor_id as actor_id,\n    pe.section_subsection_problem_engagement as section_subsection_problem_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom problem_engagement pe\njoin\n    reporting.dim_course_blocks course_blocks\n    on (\n        pe.org = course_blocks.org\n        and pe.course_key = course_blocks.course_key\n        and pe.block_id = course_blocks.block_id\n    )\nleft outer join\n    reporting.dim_user_pii users\n    on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n    or pe.actor_id = toString(users.external_user_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_problem_engagement_en](id:155)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'd ù IMW∑ö\Á7[ä:_\€',0,NULL,1,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',156,'dim_at_risk_learners',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    page_visits as (\n        select org, course_key, actor_id, max(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            and emission_time < subtractDays(now(), 7)\n        group by org, course_key, actor_id\n    )\n\nselect\n    learners.org as org,\n    learners.course_key as course_key,\n    learners.course_name as course_name,\n    learners.course_run as course_run,\n    learners.actor_id as actor_id,\n    learners.username as username,\n    learners.name as name,\n    learners.email as email,\n    learners.enrollment_mode as enrollment_mode,\n    learners.course_grade as course_grade,\n    learners.enrolled_at as enrolled_at,\n    learners.grade_bucket as grade_bucket,\n    page_visits.last_visited as last_visited\nfrom reporting.fact_student_status learners\njoin page_visits using (org, course_key, actor_id)\nwhere\n    approving_state = \'failed\'\n    and enrollment_status = \'registered\'\n    and page_visits.last_visited < subtractDays(now(), 7)\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[dim_at_risk_learners](id:156)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'í\Í\‹a)1W~ï∑4≠±®\ı',0,NULL,1,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',157,'learner_summary_uk','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    latest_emission_time as (\n        select org, course_key, actor_id, MAX(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    enrollment_status as (\n        select org, course_key, actor_id, MAX(emission_time) as max_emission_time\n        from reporting.fact_enrollment_status\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    student_status as (\n        select\n            fss.org as org,\n            fss.course_key as course_key,\n            fss.actor_id as actor_id,\n            fss.course_name as course_name,\n            fss.course_run as course_run,\n            fss.approving_state as approving_state,\n            fss.enrollment_mode as enrollment_mode,\n            fss.enrollment_status as enrollment_status,\n            fss.course_grade as course_grade,\n            fss.grade_bucket as grade_bucket,\n            fss.username as username,\n            fss.name as name,\n            fss.email as email,\n            fss.enrolled_at as enrolled_at\n        from reporting.fact_student_status fss\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n    )\nselect\n    fss.org as org,\n    fss.course_key as course_key,\n    fss.actor_id as actor_id,\n    fss.course_name as course_name,\n    fss.course_run as course_run,\n    fss.approving_state as approving_state,\n    fss.enrollment_mode as enrollment_mode,\n    fss.enrollment_status as enrollment_status,\n    fss.course_grade as course_grade,\n    fss.grade_bucket as grade_bucket,\n    fss.username as username,\n    fss.name as name,\n    fss.email as email,\n    fes.max_emission_time as emission_time,\n    GREATEST(let.last_visited, fss.enrolled_at) as last_visited\nfrom student_status fss\nleft join\n    enrollment_status fes\n    on fss.org = fes.org\n    and fss.course_key = fes.course_key\n    and fss.actor_id = fes.actor_id\nleft join\n    latest_emission_time let\n    on fss.org = let.org\n    and fss.course_key = let.course_key\n    and fss.actor_id = let.actor_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_summary_uk](id:157)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '∂YJôH\⁄T\˜≥!´_nì\Â',0,NULL,0,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',158,'fact_video_watches_zh_CN',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watched_segments as (\n        with\n            video_events as (\n                select\n                    emission_time,\n                    org,\n                    course_key,\n                    splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                    object_id,\n                    actor_id,\n                    verb_id,\n                    video_position,\n                    video_duration\n                from xapi.video_playback_events\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            starts as (\n                select *\n                from video_events\n                where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n            ),\n            ends as (\n                select *\n                from video_events\n                where\n                    verb_id in (\n                        \'http://adlnet.gov/expapi/verbs/completed\',\n                        \'https://w3id.org/xapi/video/verbs/seeked\',\n                        \'https://w3id.org/xapi/video/verbs/paused\',\n                        \'http://adlnet.gov/expapi/verbs/terminated\'\n                    )\n            ),\n            segments as (\n                select\n                    starts.org as org,\n                    starts.course_key as course_key,\n                    starts.video_id as video_id,\n                    starts.actor_id,\n                    starts.object_id as object_id,\n                    cast(starts.video_position as Int32) as start_position,\n                    cast(ends.video_position as Int32) as end_position,\n                    starts.emission_time as started_at,\n                    ends.emission_time as ended_at,\n                    ends.verb_id as end_type,\n                    starts.video_duration as video_duration\n                from starts left\n                asof join\n                    ends\n                    on (\n                        starts.org = ends.org\n                        and starts.course_key = ends.course_key\n                        and starts.video_id = ends.video_id\n                        and starts.actor_id = ends.actor_id\n                        and starts.emission_time < ends.emission_time\n                    )\n            ),\n            enriched_segments as (\n                select\n                    segments.org as org,\n                    segments.course_key as course_key,\n                    blocks.course_name as course_name,\n                    blocks.course_run as course_run,\n                    blocks.section_with_name as section_with_name,\n                    blocks.subsection_with_name as subsection_with_name,\n                    blocks.block_name as video_name,\n                    blocks.display_name_with_location as video_name_with_location,\n                    segments.actor_id as actor_id,\n                    segments.object_id as object_id,\n                    segments.started_at as started_at,\n                    segments.start_position\n                    - (segments.start_position % 5) as start_position,\n                    segments.end_position - (segments.end_position % 5) as end_position,\n                    segments.video_duration as video_duration,\n                    segments.video_id as video_id\n                from segments\n                join\n                    reporting.dim_course_blocks_extended blocks\n                    on (\n                        segments.course_key = blocks.course_key\n                        and segments.video_id = blocks.block_id\n                    )\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            )\n\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            section_with_name,\n            subsection_with_name,\n            video_name,\n            video_name_with_location,\n            video_id,\n            concat(\n                \'<a href=\"\',\n                object_id,\n                \'\" target=\"_blank\">\',\n                video_name_with_location,\n                \'</a>\'\n            ) as video_link,\n            actor_id,\n            started_at,\n            arrayJoin(range(start_position, end_position, 5)) as segment_start,\n            video_duration,\n            CONCAT(\n                toString(segment_start), \'-\', toString(segment_start + 4)\n            ) as segment_range,\n            start_position,\n            username,\n            name,\n            email\n        from enriched_segments\n        left outer join\n            reporting.dim_user_pii users\n            on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n            or actor_id = toString(users.external_user_id)\n        order by segment_start\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_link,\n    actor_id,\n    username,\n    email,\n    name,\n    count(distinct segment_start) as watched_segment_count,\n    (video_duration - 10) / 5 as video_segment_count,\n    video_segment_count <= watched_segment_count as watched_entire_video\nfrom watched_segments\nwhere\n    1 = 1\n\n    {% if filter_values(\"Section Name\") != [] %}\n        and section_with_name in {{ filter_values(\"Section Name\") | where_in }}\n    {% endif %}\n    {% if filter_values(\"Subsection Name\") != [] %}\n        and subsection_with_name in {{ filter_values(\"Subsection Name\") | where_in }}\n    {% endif %}\n    {% if from_dttm %} and started_at > \'{{ from_dttm }}\' {% endif %}\n    {% if to_dttm %} and started_at < \'{{ to_dttm }}\' {% endif %}\n\ngroup by\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_link,\n    actor_id,\n    video_id,\n    video_segment_count,\n    username,\n    email,\n    name\n',NULL,'[OpenedX Clickhouse].[fact_video_watches_zh_CN](id:158)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary '\“FÉ£\Î\„WÌÅÉù«êz\Õ',0,NULL,1,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',159,'course_names_id',NULL,NULL,1,1,1,0,NULL,0,NULL,'event_sink','select * from event_sink.course_names\n',NULL,'[OpenedX Clickhouse].[course_names_id](id:159)',0,NULL,0,NULL,'[OpenedX Clickhouse].[event_sink]','{}',_binary '}åQ°C[\ÎÆ\ƒŒô67ûz',0,NULL,1,0),('2025-01-10 06:45:00','2025-01-14 07:52:38',160,'xapi_events_all_parsed_th','emission_time',NULL,1,1,1,0,NULL,0,NULL,'xapi','select * from xapi.xapi_events_all_parsed\n',NULL,'[OpenedX Clickhouse].[xapi_events_all_parsed_th](id:160)',0,NULL,0,NULL,'[OpenedX Clickhouse].[xapi]','{}',_binary 'Cx\n\≈\‘Z—ø\Z!˘aºO3',0,NULL,1,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',161,'learner_summary_da','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    latest_emission_time as (\n        select org, course_key, actor_id, MAX(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    enrollment_status as (\n        select org, course_key, actor_id, MAX(emission_time) as max_emission_time\n        from reporting.fact_enrollment_status\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    student_status as (\n        select\n            fss.org as org,\n            fss.course_key as course_key,\n            fss.actor_id as actor_id,\n            fss.course_name as course_name,\n            fss.course_run as course_run,\n            fss.approving_state as approving_state,\n            fss.enrollment_mode as enrollment_mode,\n            fss.enrollment_status as enrollment_status,\n            fss.course_grade as course_grade,\n            fss.grade_bucket as grade_bucket,\n            fss.username as username,\n            fss.name as name,\n            fss.email as email,\n            fss.enrolled_at as enrolled_at\n        from reporting.fact_student_status fss\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n    )\nselect\n    fss.org as org,\n    fss.course_key as course_key,\n    fss.actor_id as actor_id,\n    fss.course_name as course_name,\n    fss.course_run as course_run,\n    fss.approving_state as approving_state,\n    fss.enrollment_mode as enrollment_mode,\n    fss.enrollment_status as enrollment_status,\n    fss.course_grade as course_grade,\n    fss.grade_bucket as grade_bucket,\n    fss.username as username,\n    fss.name as name,\n    fss.email as email,\n    fes.max_emission_time as emission_time,\n    GREATEST(let.last_visited, fss.enrolled_at) as last_visited\nfrom student_status fss\nleft join\n    enrollment_status fes\n    on fss.org = fes.org\n    and fss.course_key = fes.course_key\n    and fss.actor_id = fes.actor_id\nleft join\n    latest_emission_time let\n    on fss.org = let.org\n    and fss.course_key = let.course_key\n    and fss.actor_id = let.actor_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_summary_da](id:161)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '\ﬂC\Ô#\€eW7Ñ&ÇT,ùõy',0,NULL,0,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',162,'query_log_th',NULL,NULL,1,1,1,0,NULL,0,NULL,'system','select\n    query_duration_ms,\n    result_rows,\n    memory_usage / (1024 * 1024) as memory_usage_mb,\n    event_time,\n    tables,\n    query,\n    http_user_agent\nfrom system.query_log\nwhere\n    (\n        has(databases, \'xapi\')\n        or has(databases, \'event_sink\')\n        or has(databases, \'reporting\')\n    )\n    and (http_user_agent like \'aspects-%\')\n    and (type = \'QueryFinish\')\norder by event_time DESC\n',NULL,'[OpenedX Clickhouse].[query_log_th](id:162)',1,NULL,0,NULL,'[OpenedX Clickhouse].[system]',NULL,_binary '£÷ù\∫^kÅ∫jè\Õ\Õ\ÿ\‘',0,NULL,0,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',163,'superset_action_log_es_419',NULL,NULL,2,1,1,0,NULL,0,NULL,'superset','select\n    l.dttm as action_date,\n    case\n        when LOWER(l.action) = \'queries\'\n        then \'query from sqllab\'\n        when LOWER(l.action) = \'chartrestapi.data\'\n        then \'query from charts\'\n        when LOWER(l.action) = \'count\'\n        then \'dashboard view\'\n        when LOWER(l.action) like \'annotation%\'\n        then \'annotations\'\n        when LOWER(l.action) like \'css%\'\n        then \'CSS\'\n        else LOWER(l.action)\n    end as action,\n    l.user_id,\n    u.username as user_name,\n    u.created_on as user_registration_date,\n    l.dashboard_id,\n    d.dashboard_title,\n    case when d.published = TRUE then \'published\' else \'draft\' end as dashboard_status,\n    l.slice_id,\n    s.slice_name,\n    s.datasource_type,\n    s.datasource_name,\n    s.datasource_id,\n    COUNT(1) as action_count\nfrom logs as l\nleft join ab_user as u on u.id = l.user_id\nleft join dashboards as d on d.id = l.dashboard_id\nleft join slices as s on s.id = l.slice_id\nwhere 1 = 1 and l.action != \'log\'\ngroup by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n',NULL,'[Superset Metadata].[superset_action_log_es_419](id:163)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary '}{=\œ\¬Wcì≤ìé\»O',0,NULL,0,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',164,'dim_at_risk_learners_zh_CN',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    page_visits as (\n        select org, course_key, actor_id, max(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            and emission_time < subtractDays(now(), 7)\n        group by org, course_key, actor_id\n    )\n\nselect\n    learners.org as org,\n    learners.course_key as course_key,\n    learners.course_name as course_name,\n    learners.course_run as course_run,\n    learners.actor_id as actor_id,\n    learners.username as username,\n    learners.name as name,\n    learners.email as email,\n    learners.enrollment_mode as enrollment_mode,\n    learners.course_grade as course_grade,\n    learners.enrolled_at as enrolled_at,\n    learners.grade_bucket as grade_bucket,\n    page_visits.last_visited as last_visited\nfrom reporting.fact_student_status learners\njoin page_visits using (org, course_key, actor_id)\nwhere\n    approving_state = \'failed\'\n    and enrollment_status = \'registered\'\n    and page_visits.last_visited < subtractDays(now(), 7)\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[dim_at_risk_learners_zh_CN](id:164)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'Åöòçö\ÍU∫º¨\n\l\\F',0,NULL,1,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',165,'fact_watched_video_segments_es_ES','started_at',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    video_events as (\n        select\n            emission_time,\n            org,\n            course_key,\n            splitByString(\'/xblock/\', object_id)[-1] as video_id,\n            object_id,\n            actor_id,\n            verb_id,\n            video_position,\n            video_duration\n        from xapi.video_playback_events\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    starts as (\n        select *\n        from video_events\n        where verb_id = \'https://w3id.org/xapi/video/verbs/played\'\n    ),\n    ends as (\n        select *\n        from video_events\n        where\n            verb_id in (\n                \'http://adlnet.gov/expapi/verbs/completed\',\n                \'https://w3id.org/xapi/video/verbs/seeked\',\n                \'https://w3id.org/xapi/video/verbs/paused\',\n                \'http://adlnet.gov/expapi/verbs/terminated\'\n            )\n    ),\n    segments as (\n        select\n            starts.org as org,\n            starts.course_key as course_key,\n            starts.video_id as video_id,\n            starts.actor_id,\n            starts.object_id as object_id,\n            cast(starts.video_position as Int32) as start_position,\n            cast(ends.video_position as Int32) as end_position,\n            starts.emission_time as started_at,\n            ends.emission_time as ended_at,\n            ends.verb_id as end_type,\n            starts.video_duration as video_duration\n        from starts left\n        asof join\n            ends\n            on (\n                starts.org = ends.org\n                and starts.course_key = ends.course_key\n                and starts.video_id = ends.video_id\n                and starts.actor_id = ends.actor_id\n                and starts.emission_time < ends.emission_time\n            )\n    ),\n    enriched_segments as (\n        select\n            segments.org as org,\n            segments.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            blocks.section_with_name as section_with_name,\n            blocks.subsection_with_name as subsection_with_name,\n            blocks.block_name as video_name,\n            blocks.display_name_with_location as video_name_with_location,\n            segments.actor_id as actor_id,\n            segments.object_id as object_id,\n            segments.started_at as started_at,\n            segments.start_position - (segments.start_position % 5) as start_position,\n            segments.end_position - (segments.end_position % 5) as end_position,\n            segments.video_duration as video_duration,\n            segments.video_id as video_id\n        from segments\n        join\n            reporting.dim_course_blocks_extended blocks\n            on (\n                segments.course_key = blocks.course_key\n                and segments.video_id = blocks.block_id\n            )\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    section_with_name,\n    subsection_with_name,\n    video_name,\n    video_name_with_location,\n    video_id,\n    concat(\n        \'<a href=\"\', object_id, \'\" target=\"_blank\">\', video_name_with_location, \'</a>\'\n    ) as video_link,\n    actor_id,\n    started_at,\n    arrayJoin(range(start_position, end_position, 5)) as segment_start,\n    video_duration,\n    CONCAT(toString(segment_start), \'-\', toString(segment_start + 4)) as segment_range,\n    start_position,\n    username,\n    name,\n    email\nfrom enriched_segments\nleft outer join\n    reporting.dim_user_pii users\n    on (actor_id like \'mailto:%\' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)\norder by segment_start\n',NULL,'[OpenedX Clickhouse].[fact_watched_video_segments_es_ES](id:165)',0,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]','{}',_binary 'ΩËØú¯0[3Ü\Í\ﬂ\"BV¶º',0,NULL,1,0),('2025-01-10 06:45:01','2025-01-14 07:52:38',166,'fact_pageview_engagement_zh_CN',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            \'subsection\' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.subsection_page_engagement\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            \'section\' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from xapi.section_page_