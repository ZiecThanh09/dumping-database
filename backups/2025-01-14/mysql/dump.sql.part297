         )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_navigation_completion_fr_CA](id:458)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary ')/˛c\ÏjPñ©\Z\ƒ\Ù7',0,NULL,0,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',459,'indexed_events_zh_CN','emission_time',NULL,1,1,1,0,NULL,0,NULL,'xapi','with\n    events as (\n        select\n            event_id,\n            CAST(emission_time, \'DateTime\') as emission_time,\n            actor_id,\n            object_id,\n            splitByString(\'/\', course_id)[-1] as course_key,\n            org,\n            verb_id\n        from xapi.xapi_events_all_parsed\n    )\n\nselect\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    event_id,\n    actor_id,\n    object_id,\n    events.course_key,\n    events.org,\n    events.verb_id,\n    emission_time\nfrom events\njoin event_sink.course_names courses on (events.course_key = courses.course_key)\n',NULL,'[OpenedX Clickhouse].[indexed_events_zh_CN](id:459)',1,NULL,0,NULL,'[OpenedX Clickhouse].[xapi]','{}',_binary '\–c\›m\ﬁ8Tñâ\Ôt\ƒe\"\0\Ë',0,NULL,0,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',460,'superset_action_log_ru',NULL,NULL,2,1,1,0,NULL,0,NULL,'superset','select\n    l.dttm as action_date,\n    case\n        when LOWER(l.action) = \'queries\'\n        then \'query from sqllab\'\n        when LOWER(l.action) = \'chartrestapi.data\'\n        then \'query from charts\'\n        when LOWER(l.action) = \'count\'\n        then \'dashboard view\'\n        when LOWER(l.action) like \'annotation%\'\n        then \'annotations\'\n        when LOWER(l.action) like \'css%\'\n        then \'CSS\'\n        else LOWER(l.action)\n    end as action,\n    l.user_id,\n    u.username as user_name,\n    u.created_on as user_registration_date,\n    l.dashboard_id,\n    d.dashboard_title,\n    case when d.published = TRUE then \'published\' else \'draft\' end as dashboard_status,\n    l.slice_id,\n    s.slice_name,\n    s.datasource_type,\n    s.datasource_name,\n    s.datasource_id,\n    COUNT(1) as action_count\nfrom logs as l\nleft join ab_user as u on u.id = l.user_id\nleft join dashboards as d on d.id = l.dashboard_id\nleft join slices as s on s.id = l.slice_id\nwhere 1 = 1 and l.action != \'log\'\ngroup by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n',NULL,'[Superset Metadata].[superset_action_log_ru](id:460)',0,NULL,0,NULL,'[Superset Metadata].[superset]','{}',_binary '@ùô\Ú∂\\≥æ\vc.«¢',0,NULL,0,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',461,'learner_summary_zh_CN','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    latest_emission_time as (\n        select org, course_key, actor_id, MAX(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    enrollment_status as (\n        select org, course_key, actor_id, MAX(emission_time) as max_emission_time\n        from reporting.fact_enrollment_status\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    student_status as (\n        select\n            fss.org as org,\n            fss.course_key as course_key,\n            fss.actor_id as actor_id,\n            fss.course_name as course_name,\n            fss.course_run as course_run,\n            fss.approving_state as approving_state,\n            fss.enrollment_mode as enrollment_mode,\n            fss.enrollment_status as enrollment_status,\n            fss.course_grade as course_grade,\n            fss.grade_bucket as grade_bucket,\n            fss.username as username,\n            fss.name as name,\n            fss.email as email,\n            fss.enrolled_at as enrolled_at\n        from reporting.fact_student_status fss\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n    )\nselect\n    fss.org as org,\n    fss.course_key as course_key,\n    fss.actor_id as actor_id,\n    fss.course_name as course_name,\n    fss.course_run as course_run,\n    fss.approving_state as approving_state,\n    fss.enrollment_mode as enrollment_mode,\n    fss.enrollment_status as enrollment_status,\n    fss.course_grade as course_grade,\n    fss.grade_bucket as grade_bucket,\n    fss.username as username,\n    fss.name as name,\n    fss.email as email,\n    fes.max_emission_time as emission_time,\n    GREATEST(let.last_visited, fss.enrolled_at) as last_visited\nfrom student_status fss\nleft join\n    enrollment_status fes\n    on fss.org = fes.org\n    and fss.course_key = fes.course_key\n    and fss.actor_id = fes.actor_id\nleft join\n    latest_emission_time let\n    on fss.org = let.org\n    and fss.course_key = let.course_key\n    and fss.actor_id = let.actor_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_summary_zh_CN](id:461)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '1≈¨hI^◊õ\‹¬ü6ŒÉ<',0,NULL,0,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',462,'learner_summary_th','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    latest_emission_time as (\n        select org, course_key, actor_id, MAX(emission_time) as last_visited\n        from xapi.fact_learner_last_course_visit\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    enrollment_status as (\n        select org, course_key, actor_id, MAX(emission_time) as max_emission_time\n        from reporting.fact_enrollment_status\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n        group by org, course_key, actor_id\n    ),\n    student_status as (\n        select\n            fss.org as org,\n            fss.course_key as course_key,\n            fss.actor_id as actor_id,\n            fss.course_name as course_name,\n            fss.course_run as course_run,\n            fss.approving_state as approving_state,\n            fss.enrollment_mode as enrollment_mode,\n            fss.enrollment_status as enrollment_status,\n            fss.course_grade as course_grade,\n            fss.grade_bucket as grade_bucket,\n            fss.username as username,\n            fss.name as name,\n            fss.email as email,\n            fss.enrolled_at as enrolled_at\n        from reporting.fact_student_status fss\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n            {% if filter_values(\"username\") != [] or filter_values(\n                \"name\"\n            ) != [] or filter_values(\"email\") != [] %}\n                and actor_id in (\n                    select external_user_id::String\n                    from event_sink.user_pii\n                    where\n                        1 = 1\n                        {% if filter_values(\"username\") != [] %}\n                            and username in {{ filter_values(\"username\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"name\") != [] %}\n                            and name in {{ filter_values(\"name\") | where_in }}\n                        {% endif %}\n                        {% if filter_values(\"email\") != [] %}\n                            and email in {{ filter_values(\"email\") | where_in }}\n                        {% endif %}\n                )\n            {% endif %}\n    )\nselect\n    fss.org as org,\n    fss.course_key as course_key,\n    fss.actor_id as actor_id,\n    fss.course_name as course_name,\n    fss.course_run as course_run,\n    fss.approving_state as approving_state,\n    fss.enrollment_mode as enrollment_mode,\n    fss.enrollment_status as enrollment_status,\n    fss.course_grade as course_grade,\n    fss.grade_bucket as grade_bucket,\n    fss.username as username,\n    fss.name as name,\n    fss.email as email,\n    fes.max_emission_time as emission_time,\n    GREATEST(let.last_visited, fss.enrolled_at) as last_visited\nfrom student_status fss\nleft join\n    enrollment_status fes\n    on fss.org = fes.org\n    and fss.course_key = fes.course_key\n    and fss.actor_id = fes.actor_id\nleft join\n    latest_emission_time let\n    on fss.org = let.org\n    and fss.course_key = let.course_key\n    and fss.actor_id = let.actor_id\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[learner_summary_th](id:462)',1,NULL,0,NULL,'[OpenedX Clickhouse].[reporting]',NULL,_binary '	[/( \◊QMÉ\·\”  ª&',0,NULL,0,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',463,'fact_at_risk_problem_engagement_uk',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    fact_problem_engagement as (\n        with\n            subsection_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'subsection\' as content_level,\n                    actor_id,\n                    subsection_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.subsection_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n\n            ),\n            section_engagement as (\n                select\n                    org,\n                    course_key,\n                    \'section\' as content_level,\n                    actor_id,\n                    section_block_id as block_id,\n                    engagement_level as section_subsection_problem_engagement\n                from xapi.section_problem_engagement\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            problem_engagement as (\n                select *\n                from subsection_engagement\n                union all\n                select *\n                from section_engagement\n            )\n        select\n            pe.org as org,\n            pe.course_key as course_key,\n            course_blocks.course_run as course_run,\n            course_blocks.display_name_with_location as section_subsection_name,\n            pe.content_level as content_level,\n            pe.actor_id as actor_id,\n            pe.section_subsection_problem_engagement\n            as section_subsection_problem_engagement,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from problem_engagement pe\n        join\n            reporting.dim_course_blocks course_blocks\n            on (\n                pe.org = course_blocks.org\n                and pe.course_key = course_blocks.course_key\n                and pe.block_id = course_blocks.block_id\n            )\n        left outer join\n            reporting.dim_user_pii users\n            on (pe.actor_id like \'mailto:%\' and SUBSTRING(pe.actor_id, 8) = users.email)\n            or pe.actor_id = toString(users.external_user_id)\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\nselect fact_problem_engagement.*\nfrom fact_problem_engagement pe\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners\n    on (\n        pe.org = at_risk_learners.org\n        and pe.course_key = at_risk_learners.course_key\n        and pe.actor_id = at_risk_learners.actor_id\n    )\n',NULL,'[OpenedX Clickhouse].[fact_at_risk_problem_engagement_uk](id:463)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]',NULL,_binary 'û7¨c∏\”Q›∫-H}uÄ\Ÿ',0,NULL,1,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',464,'fact_enrollments_it_IT','emission_time',NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    enrollments_base as (\n        select *\n        from reporting.fact_enrollments\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    actor_id,\n    enrollment_mode,\n    enrollment_status\nfrom enrollments_base\n',NULL,'[OpenedX Clickhouse].[fact_enrollments_it_IT](id:464)',0,NULL,0,'{}','[OpenedX Clickhouse].[reporting]','{}',_binary 'p&Ré\˜U1∫ŒÄ#É',0,NULL,1,0),('2025-01-10 06:45:30','2025-01-14 07:53:01',465,'at_risk_coursewide_avg_hi','emission_time',NULL,1,1,1,0,NULL,0,NULL,NULL,'with\n    problem_coursewide_avg as (\n        -- See int_problem_results.sql for more context\n        with\n            successful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    first_success_at\n                from xapi.responses\n                where\n                    isNotNull(first_success_at)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n            ),\n            unsuccessful_responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id::String as actor_id,\n                    max(last_attempt_at) as last_attempt_at\n                from xapi.responses\n                where\n                    actor_id not in (select distinct actor_id from successful_responses)\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                group by org, course_key, problem_id, actor_id\n            ),\n            responses as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    first_success_at as emission_time\n                from successful_responses\n                union all\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    actor_id,\n                    last_attempt_at as emission_time\n                from unsuccessful_responses\n            ),\n            full_responses as (\n                select\n                    events.emission_time as emission_time,\n                    events.org as org,\n                    events.course_key as course_key,\n                    events.problem_id as problem_id,\n                    events.object_id as object_id,\n                    events.actor_id as actor_id,\n                    events.responses as responses,\n                    events.success as success,\n                    events.attempts as attempts,\n                    events.interaction_type as interaction_type\n                from xapi.problem_events events\n                join\n                    responses using (\n                        org, course_key, problem_id, actor_id, emission_time\n                    )\n            ),\n            -- Aggregating course-wide averages and percentages\n            coursewide_attempts as (\n                select\n                    org,\n                    course_key,\n                    problem_id,\n                    avg(\n                        case when success then attempts else 0 end\n                    ) as avg_correct_attempts,\n                    avg(\n                        case when not success then attempts else 0 end\n                    ) as avg_incorrect_attempts,\n                    sum(case when success then 1 else 0 end)::float\n                    / count(*) as coursewide_percent_correct\n                from full_responses\n                group by org, course_key, problem_id\n            )\n\n        select\n            full_responses.emission_time as emission_time,\n            full_responses.org as org,\n            full_responses.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            full_responses.problem_id as problem_id,\n            blocks.block_name as problem_name,\n            blocks.display_name_with_location as problem_name_with_location,\n            blocks.course_order as course_order,\n            concat(\n                \'<a href=\"\',\n                full_responses.object_id,\n                \'\" target=\"_blank\">\',\n                problem_name_with_location,\n                \'</a>\'\n            ) as problem_link,\n            full_responses.actor_id as actor_id,\n            full_responses.responses as responses,\n            full_responses.success as success,\n            full_responses.attempts as attempts,\n            full_responses.interaction_type as interaction_type,\n            blocks.graded as graded,\n            users.username as username,\n            users.email as email,\n            users.name as name,\n            -- Aggregated values from the coursewide_attempts CTE\n            coursewide_attempts.avg_correct_attempts as avg_correct_attempts_coursewide,\n            coursewide_attempts.avg_incorrect_attempts\n            as avg_incorrect_attempts_coursewide,\n            coursewide_attempts.coursewide_percent_correct\n            as coursewide_percent_correct,\n            -- Learner-specific calculations (correcting the percentage calculations)\n            (\n                case when full_responses.success then full_responses.attempts else 0 end\n            ) as correct_attempts_by_learner,\n            (\n                case\n                    when not full_responses.success then full_responses.attempts else 0\n                end\n            ) as incorrect_attempts_by_learner,\n            -- Ensure we calculate percentage based on total attempts per problem\n            -- (multiplied\n            -- by 100 only once)\n            (\n                sum(case when full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_correct,\n            (\n                sum(case when not full_responses.success then 1 else 0 end) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                ) / count(*) over (\n                    partition by full_responses.actor_id, full_responses.problem_id\n                )\n            ) as selected_learner_percent_incorrect\n        from full_responses\n        join\n            reporting.dim_course_blocks blocks\n            on (\n                full_responses.course_key = blocks.course_key\n                and full_responses.problem_id = blocks.block_id\n            )\n        left outer join\n            event_sink.user_pii users\n            on (\n                full_responses.actor_id like \'mailto:%\'\n                and SUBSTRING(full_responses.actor_id, 8) = users.email\n            )\n            or full_responses.actor_id = toString(users.external_user_id)\n        join\n            coursewide_attempts\n            on full_responses.org = coursewide_attempts.org\n            and full_responses.course_key = coursewide_attempts.course_key\n            and full_responses.problem_id = coursewide_attempts.problem_id\n        where\n            1 = 1\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    )\n\nselect problem_coursewide_avg.*\nfrom problem_coursewide_avg\njoin\n    (\n        with\n            page_visits as (\n                select org, course_key, actor_id, max(emission_time) as last_visited\n                from xapi.fact_learner_last_course_visit\n                where\n                    1 = 1\n                    {% if filter_values(\"org\") != [] %}\n                        and org in {{ filter_values(\"org\") | where_in }}\n                    {% endif %}\n\n                    {% if filter_values(\"course_name\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from event_sink.course_names\n                            where\n                                course_name\n                                in {{ filter_values(\"course_name\") | where_in }}\n                        )\n                    {% endif %}\n\n                    {% if filter_values(\"tag\") != [] %}\n                        and course_key in (\n                            select course_key\n                            from reporting.most_recent_course_tags\n                            where\n                                tag in (\n                                    select\n                                        replaceAll(\n                                            arrayJoin({{ filter_values(\"tag\") }}),\n                                            \'- \',\n                                            \'\'\n                                        )\n                                )\n                        )\n                    {% endif %}\n                    and emission_time < subtractDays(now(), 7)\n                group by org, course_key, actor_id\n            )\n\n        select org, course_key, learners.actor_id as actor_id\n        from reporting.fact_student_status learners\n        join page_visits using (org, course_key, actor_id)\n        where\n            approving_state = \'failed\' and enrollment_status = \'registered\'\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n    ) as at_risk_learners using (org, course_key, actor_id)\n',NULL,'[OpenedX Clickhouse].[at_risk_coursewide_avg_hi](id:465)',1,NULL,0,NULL,NULL,NULL,_binary 'ñ€µdããTdØ¨$à6\‘y',0,NULL,0,0),('2025-01-10 06:45:31','2025-01-14 07:53:02',466,'fact_student_status_plus_7_days_he','enrolled_at',NULL,1,1,1,0,NULL,0,NULL,NULL,'with\n    recent_activity as (\n        select course_key, COUNT(DISTINCT actor_id) as active_last_7_days\n        from xapi.navigation_events\n        where\n            emission_time >= NOW() - INTERVAL 7 DAY\n            {% if filter_values(\"org\") != [] %}\n                and org in {{ filter_values(\"org\") | where_in }}\n            {% endif %}\n\n            {% if filter_values(\"course_name\") != [] %}\n                and course_key in (\n                    select course_key\n                    from event_sink.course_names\n                    where course_name in {{ filter_values(\"course_name\") | where_in }}\n                )\n            {% endif %}\n\n            {% if filter_values(\"tag\") != [] %}\n                and course_key in (\n                    select course_key\n                    from reporting.most_recent_course_tags\n                    where\n                        tag in (\n                            select\n                                replaceAll(\n                                    arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'\n                                )\n                        )\n                )\n            {% endif %}\n        group by course_key\n    )\n\nselect fss.*, COALESCE(ra.active_last_7_days, 0) as active_within_last_7_days\nfrom reporting.fact_student_status fss\nleft join recent_activity ra on fss.course_key = ra.course_key\nwhere\n    1 = 1\n    {% if filter_values(\"org\") != [] %}\n        and org in {{ filter_values(\"org\") | where_in }}\n    {% endif %}\n\n    {% if filter_values(\"course_name\") != [] %}\n        and course_key in (\n            select course_key\n            from event_sink.course_names\n            where course_name in {{ filter_values(\"course_name\") | where_in }}\n        )\n    {% endif %}\n\n    {% if filter_values(\"tag\") != [] %}\n        and course_key in (\n            select course_key\n            from reporting.most_recent_course_tags\n            where\n                tag\n                in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}), \'- \', \'\'))\n        )\n    {% endif %}\n',NULL,'[OpenedX Clickhouse].[fact_student_status_plus_7_days_he](id:466)',1,NULL,0,NULL,NULL,NULL,_binary 'ƒü@˛\÷\ÚP)û≠\Ÿ˙\È©ª',0,NULL,0,0),('2025-01-10 06:45:31','2025-01-14 07:53:02',467,'query_log',NULL,NULL,1,1,1,0,NULL,0,NULL,'system','select\n    query_duration_ms,\n    result_rows,\n    memory_usage / (1024 * 1024) as memory_usage_mb,\n    event_time,\n    tables,\n    query,\n    http_user_agent\nfrom system.query_log\nwhere\n    (\n        has(databases, \'xapi\')\n        or has(databases, \'event_sink\')\n        or has(databases, \'reporting\')\n    )\n    and (http_user_agent like \'aspects-%\')\n    and (type = \'QueryFinish\')\norder by event_time DESC\n',NULL,'[OpenedX Clickhouse].[query_log](id:467)',1,NULL,0,NULL,'[OpenedX Clickhouse].[system]',NULL,_binary 'S	ü\“g9EÂöì¸π˙pü',0,NULL,0,0),('2025-01-10 06:45:31','2025-01-14 07:53:02',468,'fact_at_risk_video_watches_en',NULL,NULL,1,1,1,0,NULL,0,NULL,'reporting','with\n    watches as (\n        with\n            watched_segments as (\n                with\n                    video_events as (\n                        select\n                            emission_time,\n                            org,\n                            course_key,\n                            splitByString(\'/xblock/\', object_id)[-1] as video_id,\n                            object_id,\n                            actor_id,\n                            verb_id,\n                            video_position,\n                            video_duration\n                        from xapi.video_playback_events\n                        where\n                            1 = 1\n                            {% if filter_values(\"org\") != [] %}\n                                and org in {{ filter_values(\"org\") | where_in }}\n                            {% endif %}\n\n                            {% if filter_values(\"course_name\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from event_sink.course_names\n                                    where\n                                        course_name\n                                        in {{ filter_values(\"course_name\") | where_in }}\n                                )\n                            {% endif %}\n\n                            {% if filter_values(\"tag\") != [] %}\n                                and course_key in (\n                                    select course_key\n                                    from reporting.most_recent_course_tags\n                                    where\n                                        tag in (\n                                            select\n                                                replaceAll(